{"version":3,"file":"component---src-pages-mdx-frontmatter-type-mdx-frontmatter-slug-js-content-file-path-content-docs-grid-index-mdx-eff8ff5a089c94825ebd.js","mappings":"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","sources":["webpack://simple-scss-utilities/./src/components/Mdx/CodeWrapper.js","webpack://simple-scss-utilities/./src/components/Layout/SidebarContext.js","webpack://simple-scss-utilities/./src/components/Layout/CustomAnchor.js","webpack://simple-scss-utilities/./src/components/Layout/Sidebar.js","webpack://simple-scss-utilities/./src/components/Layout/SidebarLayout.js","webpack://simple-scss-utilities/./content/docs/Grid/index.mdx","webpack://simple-scss-utilities/./src/pages/{mdx.frontmatter__type}/{mdx.frontmatter__slug}.js"],"sourcesContent":["import React from \"react\"\r\n\r\n// I decided to keep this seperate from CodeBlock.js, which which taken from examples give by how to use prisimjs in MDX around the interent\r\n// This is just a wrapper for code blocks, displays the filename or language, plus whatever else might be necessary in the future\r\n\r\n// a results block might be good too\r\n\r\nconst CodeWrapper = ({ children, title, isFile, addExtraMarginUnderTitle }) => {\r\n  return (\r\n    <div className=\"mt-lg mb-2xl mr-2\">\r\n      <h6\r\n        className={`font-large text-lg position-relative left-1px ${\r\n          addExtraMarginUnderTitle ? \"mb-md\" : \"mb-xs\"\r\n        }`}\r\n      >\r\n        {isFile ? \"File: \" : \"\"}\r\n        {title}\r\n      </h6>\r\n      <div className=\"mr-md\">{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodeWrapper\r\n","import { createContext } from \"react\"\r\n\r\nconst SidebarContext = createContext({\r\n  hasScrolled: false,\r\n  setHasScrolled: () => {}, // keep track if the scrolling was done by the user\r\n\r\n  activeAnchor: \"\", // '${path} ${to} of active anchor link'\r\n  setActiveAnchor: () => {}\r\n})\r\n\r\nexport default SidebarContext\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport SidebarContext from \"./SidebarContext\"\r\nimport { useLocation } from \"@reach/router\"\r\nimport { navigate } from \"gatsby\"\r\n\r\n/*\r\n  Gatsby seemed to have a little trouble with anchor links \r\n  Not only did they not seem to quite work but.. I also wanted to implement smooth scrolling\r\n  if you jump from page to page so I made my own component. \r\n  It's possible to make the URLs just slightly awkared if you\r\n  click directly on the link .. but.. they still work\r\n*/\r\nconst CustomAnchor = ({ children, path, to }) => {\r\n  const location = useLocation()\r\n  const { activeAnchor, setActiveAnchor, hasScrolled, setHasScrolled } =\r\n    useContext(SidebarContext)\r\n  const [active, setActive] = useState(false)\r\n  const { pathname } = location\r\n\r\n  useEffect(() => {\r\n    if (activeAnchor == `${process.env.PATH_PREFIX}${path} ${to}`) {\r\n      setActive(true)\r\n    } else {\r\n      setActive(false)\r\n    }\r\n  }, [activeAnchor])\r\n\r\n  // console.log(\r\n  //   `path: ${path} to: ${to} pathname: ${pathname} prefix with path: ${process.env.PATH_PREFIX}${path}`\r\n  // )\r\n\r\n  return (\r\n    <p\r\n      className={`${active ? \"font-bold\" : \"\"} cursor-pointer`}\r\n      onClick={() => {\r\n        // the pathname from location usually has an added slash\r\n\r\n        if (`${process.env.PATH_PREFIX}${path}/` == pathname) {\r\n          const tag = document.getElementById(to)\r\n          tag.scrollIntoView({ behavior: \"smooth\" })\r\n          // set \"hasScrolled\" to false .. gets set true if the user scrolls the docs area\r\n          setHasScrolled(false)\r\n\r\n          // in the MDX anchor componnnt, the text generates the id \"to\"\r\n          // two anchor links on different documents might have the same text so\r\n          // I have the path be part of the identifying string\r\n          // as long as 2 anchors on the same MDX page don't have the same text we're good\r\n          setActiveAnchor(`${process.env.PATH_PREFIX}${path} ${to}`)\r\n        } else {\r\n          navigate(`${path}?anchor=${to}`)\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default CustomAnchor\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useLocation } from \"@reach/router\"\r\nimport CustomAnchor from \"./CustomAnchor\"\r\nimport SidebarContext from \"./SidebarContext\"\r\nimport LayoutContext from \"./LayoutContext\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faX, faBars } from \"@fortawesome/free-solid-svg-icons\"\r\nimport * as layoutStyles from \"./layout.module.scss\"\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\"\r\n// HEADER IS A ReserveD WORD\r\n\r\nconst SideBar = ({ sidebarData }) => {\r\n  const { setActiveAnchor, hasScrolled } = useContext(SidebarContext)\r\n  const { sidebarOpen, setSidebarOpen } = useContext(LayoutContext)\r\n\r\n  const [anchorsOnPage, setAnchorsOnPage] = useState([])\r\n  const [anchorsLoaded, setAnchorsLoaded] = useState(false)\r\n  const [anchorUpdate, setAnchorUpdate] = useState([])\r\n\r\n  const [intialAnchorLinkSet, setIntialAnchorLinkSet] = useState(false)\r\n\r\n  // const [sidebarOpen, setSidebarOpen] = useState(true)\r\n  const [wideScreen, setWideScreen] = useState(false)\r\n  const { width } = useWindowDimensions()\r\n\r\n  const location = useLocation()\r\n  const { pathname } = location\r\n\r\n  // ok every time something enteres or leaves, update\r\n  // the anchors in view\r\n  useEffect(() => {\r\n    const els = document.querySelectorAll(\".anchor-link\")\r\n\r\n    const observerCallback = (entries, observer, header) => {\r\n      const newAnchorInfo = []\r\n      entries.forEach((entry, i) => {\r\n        const to = entry.target.href.split(\"#\")[1]\r\n        const path = pathname.slice(0, -1)\r\n        const anchorString = `${path} ${to}`\r\n\r\n        if (entry.isIntersecting) {\r\n          newAnchorInfo.push({\r\n            anchorString,\r\n            inView: true,\r\n            offsetTop: entry.target.offsetTop\r\n          })\r\n        } else {\r\n          newAnchorInfo.push({\r\n            anchorString,\r\n            inView: false,\r\n            offsetTop: entry.target.offsetTop\r\n          })\r\n        }\r\n      })\r\n\r\n      setAnchorUpdate(newAnchorInfo)\r\n    }\r\n\r\n    const observer = new window.IntersectionObserver(observerCallback, {\r\n      root: null,\r\n      threshold: 0.5 // set offset 0.1 means trigger if atleast 10% of element in viewport\r\n    })\r\n\r\n    els.forEach((el) => {\r\n      observer.observe(el)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (anchorUpdate.length && !anchorsLoaded) {\r\n      setAnchorsOnPage(anchorUpdate)\r\n      setAnchorsLoaded(true)\r\n    }\r\n  }, [anchorUpdate, anchorsLoaded])\r\n\r\n  // eh, there might be a better way to do this but\r\n  // by the time I got here I was like \"It works, and it's good enough!\"\r\n  useEffect(() => {\r\n    // to prevent infinite reloading, only update if there is a non-empty update, and then set the update to empty if done\r\n    if (anchorsLoaded && anchorUpdate.length) {\r\n      let newAnchorsOnPage = [...anchorsOnPage]\r\n      anchorUpdate.forEach((anchorInfo) => {\r\n        const index = anchorsOnPage.findIndex((anchor) => {\r\n          return anchorInfo.anchorString == anchor.anchorString\r\n        })\r\n\r\n        if (index >= 0) {\r\n          newAnchorsOnPage.splice(index, 1, anchorInfo)\r\n        }\r\n      })\r\n\r\n      setAnchorsOnPage(newAnchorsOnPage)\r\n      setAnchorUpdate([])\r\n\r\n      if (hasScrolled) {\r\n        let smallestTopOffset = Number.POSITIVE_INFINITY\r\n        let indexOfSmallestOffset = -1\r\n        newAnchorsOnPage.forEach((anchor, i) => {\r\n          if (anchor.inView && anchor.offsetTop < smallestTopOffset) {\r\n            smallestTopOffset = anchor.offsetTop\r\n            indexOfSmallestOffset = i\r\n          }\r\n        })\r\n\r\n        if (indexOfSmallestOffset >= 0) {\r\n          const newActiveAnchorInfo = newAnchorsOnPage[indexOfSmallestOffset]\r\n          setActiveAnchor(newActiveAnchorInfo.anchorString)\r\n        } else {\r\n          // if we're here, there's no anchors vidible on screen\r\n          setActiveAnchor(\"\")\r\n        }\r\n      }\r\n    }\r\n  }, [anchorsOnPage, anchorUpdate, anchorsLoaded, hasScrolled])\r\n\r\n  useEffect(() => {\r\n    if (location.search && !intialAnchorLinkSet) {\r\n      const urlParams = new URLSearchParams(location.search)\r\n      const anchorLink = urlParams.get(\"anchor\")\r\n      if (anchorLink) {\r\n        const tag = document.getElementById(anchorLink)\r\n        if (tag) {\r\n          tag.scrollIntoView({ behavior: \"smooth\" })\r\n\r\n          const path = pathname.slice(0, -1)\r\n          setActiveAnchor(`${path} ${anchorLink}`)\r\n        }\r\n      }\r\n      setIntialAnchorLinkSet(true)\r\n    } else if (anchorsLoaded && !intialAnchorLinkSet) {\r\n      // just set the active anchor link to the highest link in view\r\n      // pretty sure it's just gonna be the firs one that's \"in view\"\r\n      // and if the first one is in view, it's gonna be that one so ..\r\n      let firstAnchor = anchorsOnPage[0]\r\n\r\n      if (firstAnchor.inView) {\r\n        setActiveAnchor(firstAnchor.anchorString)\r\n      }\r\n\r\n      setIntialAnchorLinkSet(true)\r\n    }\r\n  }, [anchorsLoaded, anchorsOnPage, intialAnchorLinkSet])\r\n\r\n  useEffect(() => {\r\n    if (width > 768) {\r\n      setWideScreen(true)\r\n    } else {\r\n      setWideScreen(false)\r\n    }\r\n  }, [width])\r\n\r\n  useEffect(() => {\r\n    setSidebarOpen(true)\r\n  }, [wideScreen])\r\n\r\n  // organize alphabetically\r\n  // then loop the map and fill in the links and sublinks\r\n  console.log(\"SIDEBAR DATA IS\")\r\n  console.log(sidebarData)\r\n\r\n  if (!sidebarData) {\r\n    return <>{`No sidebar data for path ${pathname}`}</>\r\n  }\r\n\r\n  const { path, nodes } = sidebarData\r\n  const rootDocArr = []\r\n  const categoryArr = []\r\n  const categoryMap = {}\r\n  nodes.forEach((node) => {\r\n    const {\r\n      frontmatter: { category, title, slug, order, isCategoryRoot, anchorLinks }\r\n    } = node\r\n    if (!category) {\r\n      // don't give a slug of \"index\" part of the path here ..\r\n      // the path will just be /docs/ or /customize/ etc\r\n      // this is different for the categories\r\n      const pathName = slug === \"index\" ? `/${path}` : `/${path}/${slug}`\r\n      rootDocArr.push({\r\n        title,\r\n        path: pathName,\r\n        sublinks: null,\r\n        order,\r\n        anchorLinks\r\n      })\r\n    } else {\r\n      if (!categoryMap[category]) {\r\n        categoryMap[category] = []\r\n      }\r\n\r\n      if (isCategoryRoot) {\r\n        categoryArr.push({\r\n          title, // uppercase the first letter later\r\n          categoryName: category, // in case I change it from the title\r\n          isCategoryRoot: true,\r\n          path: `/${path}/${slug}`,\r\n          sublinks: null, // get changed into an array later\r\n          order,\r\n          anchorLinks\r\n        })\r\n      } else {\r\n        categoryMap[category].push({\r\n          title,\r\n          path: `/${path}/${slug}`,\r\n          order,\r\n          anchorLinks\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  // ok now loop through the sidebarLinkArr. If there's sublinks, fil them in\r\n\r\n  categoryArr.forEach((entry) => {\r\n    const category = entry.categoryName\r\n    entry.sublinks = categoryMap[category]\r\n  })\r\n\r\n  // the root docs will go first, sorted by an order property,  and then the categories\r\n  // in alphabetical order, and then the sublinks (in a category) are sorted by a frontmatter \"order\" property\r\n  // the anchor links are already determined in the frontmatter defintion\r\n  rootDocArr.sort((a, b) => a.order - b.order)\r\n  categoryArr.sort((a, b) => {\r\n    return a.order - b.order\r\n  })\r\n\r\n  categoryArr.forEach((item) => {\r\n    const { sublinks } = item\r\n\r\n    if (sublinks) {\r\n      sublinks.sort((a, b) => {\r\n        return a.order - b.order\r\n      })\r\n    }\r\n  })\r\n\r\n  const sidebarLinkArr = [...rootDocArr, ...categoryArr]\r\n\r\n  // capitalize category name\r\n  // .. hm.. oh yeah. Fix anchor links\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-0\">\r\n        <div\r\n          onClick={() => setSidebarOpen(true)}\r\n          className={`${\r\n            sidebarOpen ? \"display-none\" : \"display-flex\"\r\n          } text-xl w-3 h-3 position-relative top-1 left-1 radius-full cursor-pointer shadow-magenta-lg hover:shadow-blue-lg bg-background-ltr items-center justify-center bg-background z-5 text-magenta hover:text-blue`}\r\n        >\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        id=\"sidebar\"\r\n        className={`${\r\n          layoutStyles.sidebar\r\n        }  max-tab:position-absolute max-tab:h-full min-w-1/4 max-tab:w-20 overflow-y-scroll bg-background z-4  ${\r\n          sidebarOpen ? \"\" : \"display-none\"\r\n        }`}\r\n      >\r\n        <nav className=\"p-md\">\r\n          <span className={`${wideScreen ? \"display-none\" : \"\"} `}>\r\n            <FontAwesomeIcon\r\n              className={`cursor-pointer hover:text-magenta text-magenta hover:text-blue text-lg py-sm`}\r\n              onClick={() => setSidebarOpen(false)}\r\n              icon={faX}\r\n            />\r\n          </span>\r\n          <ul className=\"display-flex flex-col line-height-lg\">\r\n            {sidebarLinkArr.map((entry) => {\r\n              const {\r\n                isCategoryRoot,\r\n                categoryName,\r\n                path,\r\n                title,\r\n                sublinks,\r\n                anchorLinks\r\n              } = entry\r\n\r\n              if (isCategoryRoot) {\r\n                const upperCaseTitle =\r\n                  title.charAt(0).toUpperCase() + title.slice(1)\r\n\r\n                const highlightLink =\r\n                  `${process.env.PATH_PREFIX}${path}/` === pathname\r\n\r\n                return (\r\n                  <li key={`${path} ${title}`}>\r\n                    <span\r\n                      className={`${\r\n                        highlightLink ? \"text-magenta\" : \"\"\r\n                      } font-large hover:text-magenta `}\r\n                    >\r\n                      <Link to={path}>{upperCaseTitle}</Link>\r\n                    </span>\r\n                    {anchorLinks && (\r\n                      <ul className=\"line-height-md \">\r\n                        {anchorLinks.map((anchorLink, i) => {\r\n                          // name of is a bit different, I don't think anchor links are a full \"path\" (might need to refacto later)\r\n                          const { title, link } = anchorLink\r\n\r\n                          return (\r\n                            <li\r\n                              key={`${title} ${link}`}\r\n                              className={`pl-md text-md ${\r\n                                i == anchorLinks.length - 1 ? \"mb-xs\" : \"\"\r\n                              } `}\r\n                            >\r\n                              <CustomAnchor path={path} to={link}>\r\n                                {title}\r\n                              </CustomAnchor>\r\n                            </li>\r\n                          )\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                    {sublinks && (\r\n                      <ul>\r\n                        {sublinks.map((link, i) => {\r\n                          const { title, path: subLinkPath, anchorLinks } = link\r\n\r\n                          const highlightLink =\r\n                            `${process.env.PATH_PREFIX}${subLinkPath}/` ===\r\n                            pathname\r\n\r\n                          return (\r\n                            <li\r\n                              key={`${title} ${subLinkPath}`}\r\n                              className={`pl-md font-normal   ${\r\n                                i == sublinks.length - 1 ? \"mb-xs\" : \"\"\r\n                              }`}\r\n                            >\r\n                              <span\r\n                                className={`${\r\n                                  highlightLink ? \"text-magenta\" : \"\"\r\n                                } font-bold hover:text-magenta`}\r\n                              >\r\n                                <Link to={subLinkPath}>{title}</Link>\r\n                              </span>\r\n\r\n                              {anchorLinks && (\r\n                                <ul className=\"line-height-md \">\r\n                                  {anchorLinks.map((anchorLink) => {\r\n                                    // name of is a bit different, I don't think anchor links are a full \"path\" (might need to refacto later)\r\n                                    const { title, link } = anchorLink\r\n\r\n                                    return (\r\n                                      <li\r\n                                        key={`${title} ${link}`}\r\n                                        className=\"pl-md text-md hover:text-magenta\"\r\n                                      >\r\n                                        <CustomAnchor\r\n                                          path={subLinkPath}\r\n                                          to={link}\r\n                                        >\r\n                                          {title}\r\n                                        </CustomAnchor>\r\n                                      </li>\r\n                                    )\r\n                                  })}\r\n                                </ul>\r\n                              )}\r\n                            </li>\r\n                          )\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                  </li>\r\n                )\r\n              }\r\n\r\n              const upperCaseTitle =\r\n                title.charAt(0).toUpperCase() + title.slice(1)\r\n\r\n              const highlightLink =\r\n                `${process.env.PATH_PREFIX}${path}/` === pathname\r\n\r\n              return (\r\n                <li key={`${path} ${title}`}>\r\n                  <span\r\n                    className={`${\r\n                      highlightLink ? \"text-magenta\" : \"\"\r\n                    } font-large hover:text-magenta`}\r\n                  >\r\n                    <Link to={path}>{title}</Link>\r\n                  </span>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React, { useState, useContext } from \"react\"\r\nimport Footer from \"./Footer\"\r\nimport SideBar from \"./Sidebar\"\r\nimport LayoutContext from \"./LayoutContext\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport * as layoutStyles from \"./layout.module.scss\"\r\nimport SidebarContext from \"./SidebarContext\"\r\n// not sure how best to pass the sidebar and the content\r\n\r\nconst SidebarLayout = ({ pathname, children }) => {\r\n  // context state\r\n  const { sidebarOpen, setSidebarOpen } = useContext(LayoutContext)\r\n\r\n  const [hasScrolled, setHasScrolled] = useState(false)\r\n  const [activeAnchor, setActiveAnchor] = useState(\"\")\r\n\r\n  const { docs, components, customize } = useStaticQuery(graphql`\r\n    query HeaderQuery {\r\n      docs: allMdx(filter: { frontmatter: { type: { eq: \"docs\" } } }) {\r\n        nodes {\r\n          id\r\n          frontmatter {\r\n            title\r\n            slug\r\n            category\r\n            order\r\n            isCategoryRoot\r\n            anchorLinks {\r\n              title\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n      # components: allMdx(\r\n      #   filter: { frontmatter: { type: { eq: \"components\" } } }\r\n      # ) {\r\n      #   nodes {\r\n      #     id\r\n      #     frontmatter {\r\n      #       title\r\n      #       slug\r\n      #       category\r\n      #       order\r\n      #       isCategoryRoot\r\n      #       anchorLinks {\r\n      #         title\r\n      #         link\r\n      #       }\r\n      #     }\r\n      #   }\r\n      # }\r\n      customize: allMdx(\r\n        filter: { frontmatter: { type: { eq: \"customize\" } } }\r\n      ) {\r\n        nodes {\r\n          id\r\n          frontmatter {\r\n            title\r\n            slug\r\n            category\r\n            order\r\n            isCategoryRoot\r\n            anchorLinks {\r\n              title\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // const pathParts = pathname.split(\"/\")\r\n  // const section = pathParts.length && pathname.split(\"/\")[1] // this should always be defined in this route but let;s be careful\r\n\r\n  let path_prefix = process.env.PATH_PREFIX\r\n    ? process.env.PATH_PREFIX\r\n    : process.env.GATSBY_PATH_PREFIX // make a .env.development file and put GAtSBY\r\n\r\n  let sidebarData\r\n\r\n  console.log(\"lets debug..\")\r\n  console.log(path_prefix)\r\n  console.log(pathname)\r\n  console.log(pathname.startsWith(`${path_prefix}docs`))\r\n\r\n  console.log(\"alright lets check out the prefixes\")\r\n  console.log(PATH_PREFIX)\r\n  console.log(GATSBY_PATH_PREFIX)\r\n\r\n  // this might be kinda janky code .. but I don't wanna spend forever trying to think about an alternative way\r\n  if (pathname.startsWith(`${path_prefix}docs`)) {\r\n    sidebarData = { path: \"docs\", ...docs }\r\n  } else if (pathname.startsWith(`${path_prefix}customize`)) {\r\n    sidebarData = { path: \"customize\", ...customize }\r\n  }\r\n\r\n  return (\r\n    <div id=\"sidebar-layout\" className=\"display-flex min-w-full grow-1\">\r\n      <SidebarContext.Provider\r\n        value={{\r\n          activeAnchor,\r\n          setActiveAnchor,\r\n          hasScrolled,\r\n          setHasScrolled\r\n        }}\r\n      >\r\n        <SideBar sidebarData={sidebarData} />\r\n        <div\r\n          id=\"docs-section\"\r\n          className={`display-flex flex-col grow-1 overflow-y-scroll position-relative ${layoutStyles.docsSection}`}\r\n          onWheel={() => {\r\n            setHasScrolled(true)\r\n          }}\r\n          // remember to test this on mobile\r\n          onTouchStart={() => {\r\n            setHasScrolled(true)\r\n          }}\r\n        >\r\n          <div\r\n            id=\"small-width-overlay\"\r\n            className={`display-none ${\r\n              sidebarOpen ? \"max-tab:display-block\" : \"\"\r\n            } position-fixed top-0 left-0 w-full h-full z-3 bg-black opacity-10`}\r\n          />\r\n          <div\r\n            id=\"the-document\"\r\n            className={`grow-1 pl-xl p-lg w-19/20 max-w-container lg:mx-auto   ${\r\n              sidebarOpen ? \"max-tab:filter-blur-md\" : \"\"\r\n            }`}\r\n          >\r\n            {children}\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </SidebarContext.Provider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarLayout\r\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Paragraph} from \"../../../src/components/Mdx/textComponents\";\nimport CodeWrapper from \"../../../src/components/Mdx/CodeWrapper\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h4: \"h4\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"The Grid System\"), \"\\n\", React.createElement(_components.h4, null, \"How to Use the Grid\"), \"\\n\", React.createElement(_components.p, null, \"Not to be confused with CSS-grid, I personally perfer to do as much as I can with flexbox, but a col-based grid system is pretty simple to make and still comes in handy so one is included. I actually didn't includ css-grid in this framework, one because I never really use it much myself, but also because it doesn't really make sense to handle the complexity and unique use cases with a framework which to me seems more cumbersome than writing it yourself!\"), \"\\n\", React.createElement(_components.p, null, \"However, I do have a this greatly simplified col-based grid system, which I think is useful enough for a lot of use cases!\"), \"\\n\", React.createElement(_components.p, null, \"It's a pretty standard 12 column system and the column classes \", React.createElement(_components.code, null, \".col-1\"), \", \", React.createElement(_components.code, null, \".col-2\"), \", etc determine how many columns an element takes up in the container. The classes are definately made to be responsive, so if you're on a browser try changing the screen widths to see how elements react!\"), \"\\n\", React.createElement(_components.p, null, \"So to use these classes wrap them in a \", React.createElement(_components.code, null, \"row\"), \" class, which pretty much applies a display flex, and there's \", React.createElement(_components.code, null, \"gap\"), \" classes for column gaps which supplies padding to the direct children, as well as negitive margins to the row. Like everything else, the column gap values can be modified in \", React.createElement(_components.code, null, \"_varialbes.css\"), \" (see \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/customize/\"\n  }, \"Customize\"), \" section for more details). Here's a listing of all the grid classes, and see below for a few examples:\"), \"\\n\", React.createElement(_components.h2, null, \"Class Definitions\"), \"\\n\", React.createElement(_components.p, null, \"(note: gap classes are applied to the children of the row)\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, \"Class\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"CSS rule\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"row\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"display: flex;\", React.createElement(\"br\"), \"flex-flow: row wrap;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-none\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: 0\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-xs\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: .25rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-sm\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: .5rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-md\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: 1rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-lg\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: 1.5rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-xl\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: 2rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"gap-2xl\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"padding: 3rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 8.3333333333%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 16.6666666667%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 25%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-4\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 33.3333333333%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-5\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 41.6666666667%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-6\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 50%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-7\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 58.3333333333%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-8\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 66.6666666667%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-9\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 75%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-10\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 83.3333333333%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-11\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 91.6666666667%;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"col-12\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"box-sizing: border-box;\", React.createElement(\"br\"), \"flex-grow: 0;\", React.createElement(\"br\"), \"width: 100%;\")))), \"\\n\", React.createElement(_components.h2, null, \"Responsive Examples\"), \"\\n\", React.createElement(_components.p, null, \"Here is a simple example that's not responsive, but just fills the screen width.\"), \"\\n\", React.createElement(_components.p, null, \"Medium gap, 4 cols (each column take up 3 \\\"column slots\\\" out of 12, making each a quarter width):\"), \"\\n\", React.createElement(\"div\", {\n    className: \"row h-8 gap-md\"\n  }, React.createElement(\"div\", {\n    className: \"col-3  br-sm border-dotted\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue center h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    className: \"text-white\",\n    text: \".col-3\"\n  }))), React.createElement(\"div\", {\n    className: \"col-3 x br-sm border-dotted\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue center h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    className: \"text-white\",\n    text: \".col-3\"\n  }))), React.createElement(\"div\", {\n    className: \"col-3  br-sm border-dotted\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue center h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    className: \"text-white\",\n    text: \".col-3\"\n  }))), React.createElement(\"div\", {\n    className: \"col-3 \"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue center h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    className: \"text-white\",\n    text: \".col-3\"\n  })))), \"\\n\", React.createElement(CodeWrapper, {\n    title: \"Html\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<!-- row container and gap -->\\r\\n<div className=\\\"row h-8 gap-md\\\">\\r\\n  <!-- each child div is 3 container widths out of 12, or 1/4 width total -->\\r\\n  <div className=\\\"col-3 br-sm border-dotted\\\">\\r\\n    <!-- the gap-md class on the row provides a consistant inner padding -->\\r\\n    <div className=\\\"bg-blue center h-full radius-md\\\">\\r\\n      <p className=\\\"text-white\\\">col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div className=\\\"col-3 br-sm border-dotted\\\">\\r\\n    <div className=\\\"bg-blue center h-full radius-md\\\">\\r\\n      <p className=\\\"text-white\\\">col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div className=\\\"col-3 br-sm border-dotted\\\">\\r\\n    <div className=\\\"bg-blue center h-full radius-md\\\">\\r\\n      <p className=\\\"text-white\\\">col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div className=\\\"col-3\\\">\\r\\n    <div className=\\\"bg-blue center h-full radius-md\\\">\\r\\n      <p className=\\\"text-white\\\">col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\n\"))), \"\\n\", React.createElement(_components.p, null, \"Now let's take a look at an example that changes from large screens to mobile according to the default breakpoints. If you change the screen width, you might have to get the sidebar out of the way on 768px or smaller (the default \\\"tablet\\\" or \\\"tab\\\" break point). The additional classes make it a bit more complitcated, but not too much more. Notice that in this case it's also best to switch the height classes to the inner grid items themselves.\"), \"\\n\", React.createElement(\"div\", {\n    className: \"row gap-sm mb-xl\"\n  }, React.createElement(\"div\", {\n    className: \"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue text-white center flex-col h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    text: \"col-12\"\n  }), React.createElement(Paragraph, {\n    text: \".lg:col-3\"\n  }), React.createElement(Paragraph, {\n    text: \".scr:col-6\"\n  }))), React.createElement(\"div\", {\n    className: \"h-8 col-12 lg:col-3 scr:col-6 lg:br-sm border-dotted\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue text-white center flex-col  h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    text: \"col-12\"\n  }), React.createElement(Paragraph, {\n    text: \".lg:col-3\"\n  }), React.createElement(Paragraph, {\n    text: \".scr:col-6\"\n  }))), React.createElement(\"div\", {\n    className: \"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue text-white center flex-col  h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    text: \"col-12\"\n  }), React.createElement(Paragraph, {\n    text: \".lg:col-3\"\n  }), React.createElement(Paragraph, {\n    text: \".scr:col-6\"\n  }))), React.createElement(\"div\", {\n    className: \"h-8 col-12 lg:col-3 scr:col-6\"\n  }, React.createElement(\"div\", {\n    className: \"bg-blue text-white center flex-col  h-full radius-md\"\n  }, React.createElement(Paragraph, {\n    text: \"col-12\"\n  }), React.createElement(Paragraph, {\n    text: \".lg:col-3\"\n  }), React.createElement(Paragraph, {\n    text: \".scr:col-6\"\n  })))), \"\\n\", React.createElement(_components.p, null, \"I switched the gap class to be a bit smaller and element has a default width of 12, but on screen sizes (denoted by the \", React.createElement(_components.code, null, \"scr:\"), \" prefix) which by default is anything over 768px wide, the width becomes 6 for a 2 column layout, and on large sizes (denoted by the \", React.createElement(_components.code, null, \"lg:\"), \" prefix), the width becomes 3 for a 4 column layout.\"), \"\\n\", React.createElement(_components.p, null, \"Also, note that this is only one way of using the responsive classes. For more info on how they work see the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/responsive-classes/\"\n  }, \"Responsive\"), \" section.\"), \"\\n\", React.createElement(_components.p, null, \"And as a final note: the \", React.createElement(_components.code, null, \"center\"), \" class has a display of flex built in, so all I need is a \", React.createElement(_components.code, null, \"flex-col\"), \" class to get inner text paragraphs in a column, and the HTML is as follows.\"), \"\\n\", React.createElement(CodeWrapper, {\n    title: \"Html\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<div className=\\\"row gap-sm\\\">\\r\\n  <div className=\\\"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\\\">\\r\\n    <div className=\\\"bg-blue text-white center flex-col h-full radius-md\\\">\\r\\n      <p>.col-12</p>\\r\\n      <p>.scr:col-6</p>\\r\\n      <p>.lg:col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div className=\\\"h-8 col-12 lg:col-3 scr:col-6 lg:br-sm border-dotted\\\">\\r\\n    <div className=\\\"bg-blue text-white center flex-col h-full radius-md\\\">\\r\\n      <p>.col-12</p>\\r\\n      <p>.scr:col-6</p>\\r\\n      <p>.lg:col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div className=\\\"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\\\">\\r\\n    <div className=\\\"bg-blue text-white center flex-col h-full radius-md\\\">\\r\\n      <p>.col-12</p>\\r\\n      <p>.scr:col-6</p>\\r\\n      <p>.lg:col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div className=\\\"h-8 col-12 lg:col-3 scr:col-6\\\">\\r\\n    <div className=\\\"bg-blue text-white center flex-col h-full radius-md\\\">\\r\\n      <p>.col-12</p>\\r\\n      <p>.scr:col-6</p>\\r\\n      <p>.lg:col-3</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\n\"))), \"\\n\", React.createElement(_components.p, null, \"Hopefully this shows how easy it is to add some basic columns to a layout with these utility classes!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/bthve/Desktop/2025 job search and side projects/side-repos/simple-scss-utilities-docs/content/docs/Grid/index.mdx\";\nimport React from \"react\";\nimport {useStaticQuery, graphql} from \"gatsby\";\nimport Layout from \"../../components/Layout/Layout\";\nimport SidebarLayout from \"../../components/Layout/SidebarLayout\";\nconst DocumentPage = ({location, data: {mdx}, children}) => {\n  const {pathname} = location;\n  if (pathname.includes(\"/page/\")) {\n    return React.createElement(React.Fragment, null, children);\n  }\n  return React.createElement(Layout, {\n    onSideBarPage: true\n  }, React.createElement(SidebarLayout, {\n    pathname: pathname\n  }, React.createElement(\"main\", null, children)));\n};\nDocumentPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocumentPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        description\n        title\n        type\n        image\n      }\n    }\n  }\n`;\n"],"names":["_ref","children","title","isFile","addExtraMarginUnderTitle","React","className","createContext","hasScrolled","setHasScrolled","activeAnchor","setActiveAnchor","path","to","location","useLocation","useContext","SidebarContext","active","setActive","useState","pathname","useEffect","process","PATH_PREFIX","onClick","document","getElementById","scrollIntoView","behavior","navigate","sidebarData","sidebarOpen","setSidebarOpen","LayoutContext","anchorsOnPage","setAnchorsOnPage","anchorsLoaded","setAnchorsLoaded","anchorUpdate","setAnchorUpdate","intialAnchorLinkSet","setIntialAnchorLinkSet","wideScreen","setWideScreen","width","useWindowDimensions","els","querySelectorAll","observer","window","IntersectionObserver","observerCallback","entries","header","newAnchorInfo","forEach","entry","i","target","href","split","anchorString","slice","isIntersecting","push","inView","offsetTop","root","threshold","el","observe","length","newAnchorsOnPage","_toConsumableArray","anchorInfo","index","findIndex","anchor","splice","smallestTopOffset","Number","POSITIVE_INFINITY","indexOfSmallestOffset","newActiveAnchorInfo","search","anchorLink","URLSearchParams","get","tag","firstAnchor","console","log","nodes","rootDocArr","categoryArr","categoryMap","node","frontmatter","category","slug","order","isCategoryRoot","anchorLinks","categoryName","sublinks","pathName","sort","a","b","item","sidebarLinkArr","concat","FontAwesomeIcon","icon","faBars","id","faX","map","upperCaseTitle","charAt","toUpperCase","highlightLink","key","Link","link","CustomAnchor","subLinkPath","docs","components","customize","useStaticQuery","path_prefix","GATSBY_PATH_PREFIX","startsWith","Provider","value","SideBar","onWheel","onTouchStart","Footer","_createMdxContent","props","_components","Object","assign","h1","h4","p","code","h2","table","thead","tr","th","tbody","td","pre","_provideComponents","align","Paragraph","text","CodeWrapper","wrapper","MDXLayout","DocumentPage","data","mdx","includes","Layout","onSideBarPage","SidebarLayout","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}