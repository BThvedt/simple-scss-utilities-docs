{"componentChunkName":"component---src-pages-mdx-frontmatter-type-mdx-frontmatter-slug-js-content-file-path-content-docs-responsive-examples-display-mdx","path":"/docs/display/","result":{"data":{"mdx":{"id":"fa4f440a-ba50-5004-a58d-233771b19898","body":"\r\nimport { Paragraph } from \"../../../src/components/Mdx/textComponents\"\r\nimport CodeWrapper from \"../../../src/components/Mdx/CodeWrapper\"\r\n\r\n# Display\r\n\r\n#### How to use\r\n\r\nThe utility classes for display are pretty straightforward:\r\n\r\n| Class                | CSS rule               |\r\n| :------------------- | :--------------------- |\r\n| display-none         | display: none;         |\r\n| display-block        | display: block;        |\r\n| display-flex         | display: flex;         |\r\n| display-inline-block | display: inline-block; |\r\n| display-inline       | display: inline;       |\r\n\r\nThese can all be prefixed with the default responsive prefixe to change the display. Out of all of these, `display: flex` probably deserves it's own section the other four properties are pretty straightforward so I'll just give some quick examples here:\r\n\r\n### Display None\r\n\r\nDisplay none of course hides content, and can be used with responsive classes like shown beneath. If you're on a browser you can change the screen width of the window to see the message change (you'll have to close the sidebar for the small widths):\r\n\r\n<div className=\"center m-lg mb-xl\">\r\n  <Paragraph\r\n    className=\"text-xl font-bold p-lg border-sm display-none max-mob:display-block\"\r\n    text=\"Mobile Size\"\r\n  />\r\n  <Paragraph\r\n    className=\"text-xl font-bold p-lg border-sm  display-none tab:display-block scr:display-none\"\r\n    text=\"Tablet Size\"\r\n  />\r\n  <Paragraph\r\n    className=\"text-xl font-bold p-lg border-sm  display-none scr:display-block lg:display-none\"\r\n    text=\"Screen Size\"\r\n  />\r\n  <Paragraph\r\n    className=\"text-xl font-bold p-lg border-sm  display-none lg:display-block\"\r\n    text=\"Large Size\"\r\n  />\r\n</div>\r\n\r\nThe default breakpoints are eaxy to edit in `_variables.scss` see the (Customize)[/customze/] section for more details. However, this effect is acheived by switching display none with display block with the breakpoint prefixes like so:\r\n\r\n<CodeWrapper title=\"HTML\" >\r\n\r\n```HTML\r\n<div class=\"center m-lg mb-xl\">\r\n  <p\r\n    class=\"text-xl font-bold p-lg border-sm\r\n      display-none max-mob:display-block\"\r\n  >\r\n    Mobile Size\r\n  </p>\r\n  <p\r\n    class=\"text-xl font-bold p-lg border-sm\r\n      display-none tab:display-block scr:display-none\"\r\n  >\r\n    Tablet Size\r\n  </p>\r\n  <p\r\n    class=\"text-xl font-bold p-lg border-sm\r\n      display-none scr:display-block lg:display-none\"\r\n  >\r\n    Screen Size\r\n  </p>\r\n  <p\r\n    class=\"text-xl font-bold p-lg border-sm\r\n      display-none lg:display-block\"\r\n  >\r\n    Large Size\r\n  </p>\r\n</div>\r\n```\r\n\r\n</CodeWrapper>\r\n\r\n### Display Block / Display Inline\r\n\r\nDisplay block and display inline basically determine if you want something to be inline, `like this code-styled text`, or a block like a new paragraph. I can't think of many useful examples of switching these responsively, but for demonstration, here's a series of span elements that are inline up to the max of the `scr` breakpoint (1024 px) and display block at widths larger:\r\n\r\n<div className=\"text-lg m-lg\">\r\n  <p className=\"display-none max-scr:display-block mb-xs\">\r\n    Below 1024px: Display Inline\r\n  </p>\r\n  <p className=\"display-none lg:display-block mb-xs\">\r\n    1024px and above: Display Block\r\n  </p>\r\n  <span className=\"max-scr:display-inline display-block p-md \">Span 1</span>\r\n  <span className=\"max-scr:display-inline display-block p-md \">Span 2</span>\r\n  <span className=\"max-scr:display-inline display-block p-md \">Span 3</span>\r\n  <span className=\"max-scr:display-inline display-block p-md \">Span 4</span>\r\n</div>\r\n\r\nThe HTML is pretty simple:\r\n\r\n<CodeWrapper title=\"HTML\" >\r\n\r\n```HTML\r\n<div class=\"text-lg m-lg\">\r\n  <p class=\"display-none max-scr:display-block mb-xs\">\r\n    Below 1024px: Display Inline\r\n  </p>\r\n  <p class=\"display-none lg:display-block mb-xs\">\r\n    1024px and above: Display Block\r\n  </p>\r\n  <span class=\"max-scr:display-inline display-block p-md \">Span 1</span>\r\n  <span class=\"max-scr:display-inline display-block p-md \">Span 2</span>\r\n  <span class=\"max-scr:display-inline display-block p-md \">Span 3</span>\r\n  <span class=\"max-scr:display-inline display-block p-md \">Span 4</span>\r\n</div>\r\n```\r\n\r\n</CodeWrapper>\r\n\r\n### Display Inline-Block\r\n\r\nDisplay Block is like Display Inline except it lets you define widths and heights. Here are some spans with widths and heights set, however in the screen size and below they're `display: inline` and on large sizes they're `display: inline-block`:\r\n\r\n<div className=\"text-lg m-lg\">\r\n  <p className=\"display-none max-scr:display-block mb-xs\">\r\n    Below 1024px: Display Inline\r\n  </p>\r\n  <p className=\"display-none lg:display-block mb-xs\">\r\n    1024px and above: Display Inline Block\r\n  </p>\r\n  <span\r\n    className=\"max-scr:display-inline \r\n\tdisplay-inline-block w-6 h-6 \r\n\tp-md lg:border-sm\"\r\n  >\r\n    <Paragraph className=\"display-inline\" text=\"Span 1\" />\r\n  </span>\r\n  <span className=\"max-scr:display-inline display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    <Paragraph className=\"display-inline\" text=\"Span 2\" />\r\n  </span>\r\n  <span className=\"max-scr:display-inline display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    <Paragraph className=\"display-inline\" text=\"Span 3\" />\r\n  </span>\r\n  <span className=\"max-scr:display-inline display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    <Paragraph className=\"display-inline\" text=\"Span 4\" />\r\n  </span>\r\n</div>\r\n\r\nAnd here's the HTML:\r\n\r\n<CodeWrapper title=\"HTML\" >\r\n\r\n```HTML\r\n<div class=\"text-lg m-lg\">\r\n  <p class=\"display-none max-scr:display-block mb-xs\">\r\n    Below 1024px: Display Inline\r\n  </p>\r\n  <p class=\"display-none lg:display-block mb-xs\">\r\n    1024px and above: Display Inline Block\r\n  </p>\r\n  <span\r\n    class=\"max-scr:display-inline\r\n      display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    Span 1\r\n  </span>\r\n  <span\r\n    class=\"max-scr:display-inline\r\n      display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    Span 2\r\n  </span>\r\n  <span\r\n    class=\"max-scr:display-inline\r\n      display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    Span 3\r\n  </span>\r\n  <span\r\n    class=\"max-scr:display-inline\r\n      display-inline-block w-6 h-6 p-md lg:border-sm\">\r\n    Span 4\r\n  </span>\r\n</div>\r\n```\r\n\r\n</CodeWrapper>\r\n\r\nThe final display property is the almighty `display: flex`. For real, I was a self taugh coder, the first website I ever made was based on a completely table-based layout haha. I didn't use display: flex for so long, but when I finally figured it out it was soooo much better. I will be going over this property in the next section. Happy Coding!\r\n","frontmatter":{"description":"Overview of the Display Classes","title":"Display","type":"docs","image":null}}},"pageContext":{"id":"fa4f440a-ba50-5004-a58d-233771b19898","frontmatter__type":"docs","frontmatter__slug":"display","__params":{"frontmatter__type":"docs","frontmatter__slug":"display"},"frontmatter":{"title":"Display","tags":["responsive","display"],"type":"docs","description":"Overview of the Display Classes","category":"responsive","slug":"display","order":55}}},"staticQueryHashes":["2241216091"],"slicesMap":{}}