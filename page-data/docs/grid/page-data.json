{"componentChunkName":"component---src-pages-mdx-frontmatter-type-mdx-frontmatter-slug-js-content-file-path-content-docs-grid-index-mdx","path":"/docs/grid/","result":{"data":{"mdx":{"id":"608992a8-6923-53f5-8031-a161c9dad162","body":"\r\nimport { Paragraph } from \"../../../src/components/Mdx/textComponents\"\r\nimport CodeWrapper from \"../../../src/components/Mdx/CodeWrapper\"\r\n\r\n# The Grid System\r\n\r\n#### How to Use the Grid\r\n\r\nNot to be confused with CSS-grid, I personally perfer to do as much as I can with flexbox, but a col-based grid system is pretty simple to make and still comes in handy so one is included. I actually didn't includ css-grid in this framework, one because I never really use it much myself, but also because it doesn't really make sense to handle the complexity and unique use cases with a framework which to me seems more cumbersome than writing it yourself!\r\n\r\nHowever, I do have a this greatly simplified col-based grid system, which I think is useful enough for a lot of use cases!\r\n\r\nIt's a pretty standard 12 column system and the column classes `.col-1`, `.col-2`, etc determine how many columns an element takes up in the container. The classes are definately made to be responsive, so if you're on a browser try changing the screen widths to see how elements react!\r\n\r\nSo to use these classes wrap them in a `row` class, which pretty much applies a display flex, and there's `gap` classes for column gaps which supplies padding to the direct children, as well as negitive margins to the row. Like everything else, the column gap values can be modified in `_varialbes.css` (see [Customize](/customize/) section for more details). Here's a listing of all the grid classes, and see below for a few examples:\r\n\r\n## Class Definitions\r\n\r\n(note: gap classes are applied to the children of the row)\r\n\r\n| Class    | CSS rule                                                             |\r\n| :------- | :------------------------------------------------------------------- |\r\n| row      | display: flex;<br/>flex-flow: row wrap;                              |\r\n| gap-none | padding: 0                                                           |\r\n| gap-xs   | padding: .25rem                                                      |\r\n| gap-sm   | padding: .5rem                                                       |\r\n| gap-md   | padding: 1rem                                                        |\r\n| gap-lg   | padding: 1.5rem                                                      |\r\n| gap-xl   | padding: 2rem                                                        |\r\n| gap-2xl  | padding: 3rem                                                        |\r\n| col-1    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 8.3333333333%;  |\r\n| col-2    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 16.6666666667%; |\r\n| col-3    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 25%;            |\r\n| col-4    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 33.3333333333%; |\r\n| col-5    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 41.6666666667%; |\r\n| col-6    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 50%;            |\r\n| col-7    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 58.3333333333%; |\r\n| col-8    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 66.6666666667%; |\r\n| col-9    | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 75%;            |\r\n| col-10   | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 83.3333333333%; |\r\n| col-11   | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 91.6666666667%; |\r\n| col-12   | box-sizing: border-box;<br/>flex-grow: 0;<br/>width: 100%;           |\r\n\r\n## Responsive Examples\r\n\r\nHere is a simple example that's not responsive, but just fills the screen width.\r\n\r\nMedium gap, 4 cols (each column take up 3 \"column slots\" out of 12, making each a quarter width):\r\n\r\n<div className=\"row h-8 gap-md\">\r\n  <div className=\"col-3  br-sm border-dotted\">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <Paragraph className=\"text-white\" text=\".col-3\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"col-3 x br-sm border-dotted\">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <Paragraph className=\"text-white\" text=\".col-3\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"col-3  br-sm border-dotted\">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <Paragraph className=\"text-white\" text=\".col-3\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"col-3 \">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <Paragraph className=\"text-white\" text=\".col-3\" />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<CodeWrapper title=\"Html\">\r\n\r\n```html\r\n<!-- row container and gap -->\r\n<div className=\"row h-8 gap-md\">\r\n  <!-- each child div is 3 container widths out of 12, or 1/4 width total -->\r\n  <div className=\"col-3 br-sm border-dotted\">\r\n    <!-- the gap-md class on the row provides a consistant inner padding -->\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <p className=\"text-white\">col-3</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"col-3 br-sm border-dotted\">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <p className=\"text-white\">col-3</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"col-3 br-sm border-dotted\">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <p className=\"text-white\">col-3</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"col-3\">\r\n    <div className=\"bg-blue center h-full radius-md\">\r\n      <p className=\"text-white\">col-3</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n```\r\n\r\n</CodeWrapper>\r\n\r\nNow let's take a look at an example that changes from large screens to mobile according to the default breakpoints. If you change the screen width, you might have to get the sidebar out of the way on 768px or smaller (the default \"tablet\" or \"tab\" break point). The additional classes make it a bit more complitcated, but not too much more. Notice that in this case it's also best to switch the height classes to the inner grid items themselves.\r\n\r\n<div className=\"row gap-sm mb-xl\">\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\">\r\n    <div className=\"bg-blue text-white center flex-col h-full radius-md\">\r\n      <Paragraph text=\"col-12\" />\r\n      <Paragraph text=\".lg:col-3\" />\r\n      <Paragraph text=\".scr:col-6\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6 lg:br-sm border-dotted\">\r\n    <div className=\"bg-blue text-white center flex-col  h-full radius-md\">\r\n      <Paragraph text=\"col-12\" />\r\n      <Paragraph text=\".lg:col-3\" />\r\n      <Paragraph text=\".scr:col-6\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\">\r\n    <div className=\"bg-blue text-white center flex-col  h-full radius-md\">\r\n      <Paragraph text=\"col-12\" />\r\n      <Paragraph text=\".lg:col-3\" />\r\n      <Paragraph text=\".scr:col-6\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6\">\r\n    <div className=\"bg-blue text-white center flex-col  h-full radius-md\">\r\n      <Paragraph text=\"col-12\" />\r\n      <Paragraph text=\".lg:col-3\" />\r\n      <Paragraph text=\".scr:col-6\" />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\nI switched the gap class to be a bit smaller and element has a default width of 12, but on screen sizes (denoted by the `scr:` prefix) which by default is anything over 768px wide, the width becomes 6 for a 2 column layout, and on large sizes (denoted by the `lg:` prefix), the width becomes 3 for a 4 column layout.\r\n\r\nAlso, note that this is only one way of using the responsive classes. For more info on how they work see the [Responsive](/responsive-classes/) section.\r\n\r\nAnd as a final note: the `center` class has a display of flex built in, so all I need is a `flex-col` class to get inner text paragraphs in a column, and the HTML is as follows.\r\n\r\n<CodeWrapper title=\"Html\">\r\n\r\n```html\r\n<div className=\"row gap-sm\">\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\">\r\n    <div className=\"bg-blue text-white center flex-col h-full radius-md\">\r\n      <p>.col-12</p>\r\n      <p>.scr:col-6</p>\r\n      <p>.lg:col-3</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6 lg:br-sm border-dotted\">\r\n    <div className=\"bg-blue text-white center flex-col h-full radius-md\">\r\n      <p>.col-12</p>\r\n      <p>.scr:col-6</p>\r\n      <p>.lg:col-3</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6 scr:br-sm border-dotted\">\r\n    <div className=\"bg-blue text-white center flex-col h-full radius-md\">\r\n      <p>.col-12</p>\r\n      <p>.scr:col-6</p>\r\n      <p>.lg:col-3</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"h-8 col-12 lg:col-3 scr:col-6\">\r\n    <div className=\"bg-blue text-white center flex-col h-full radius-md\">\r\n      <p>.col-12</p>\r\n      <p>.scr:col-6</p>\r\n      <p>.lg:col-3</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n```\r\n\r\n</CodeWrapper>\r\n\r\nHopefully this shows how easy it is to add some basic columns to a layout with these utility classes!\r\n","frontmatter":{"description":"How to use the Grid","title":"Grid","type":"docs","image":null}}},"pageContext":{"id":"608992a8-6923-53f5-8031-a161c9dad162","frontmatter__type":"docs","frontmatter__slug":"grid","__params":{"frontmatter__type":"docs","frontmatter__slug":"grid"},"frontmatter":{"title":"Grid","tags":["grid"],"type":"docs","category":"grid","description":"How to use the Grid","isCategoryRoot":true,"slug":"grid","order":30,"anchorLinks":[{"title":"Class Definitions","link":"class-definitions"},{"title":"Responsive Examples","link":"responsive-examples"}]}}},"staticQueryHashes":["2241216091"],"slicesMap":{}}