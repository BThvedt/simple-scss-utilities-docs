{"version":3,"file":"component---src-pages-mdx-frontmatter-type-mdx-frontmatter-slug-js-content-file-path-content-docs-index-mdx-f7a4341f657a3320f6d4.js","mappings":"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","sources":["webpack://simple-scss-utilities/./content/docs/index.mdx","webpack://simple-scss-utilities/./src/pages/{mdx.frontmatter__type}/{mdx.frontmatter__slug}.js","webpack://simple-scss-utilities/./src/components/Mdx/CodeWrapper.js","webpack://simple-scss-utilities/./src/components/Layout/SidebarContext.js","webpack://simple-scss-utilities/./src/components/Layout/CustomAnchor.js","webpack://simple-scss-utilities/./src/components/Layout/Sidebar.js","webpack://simple-scss-utilities/./src/components/Layout/SidebarLayout.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport CodeWrapper from \"../../src/components/Mdx/CodeWrapper\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h4: \"h4\",\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Overview\"), \"\\n\", React.createElement(_components.h4, null, \"Utility Classes for SCSS\"), \"\\n\", React.createElement(_components.p, null, \"I assume you're familiar with the concept of utility classes. If not, it's really easy to pick up. I'm trying to think of a good way to get started, so how about we look at some colors!\"), \"\\n\", React.createElement(_components.h3, null, \"A quick example: Colors!\"), \"\\n\", React.createElement(_components.p, null, \"Here are the default colors the framework defines by default:\"), \"\\n\", React.createElement(\"div\", {\n    className: \"display-flex flex-col items-center justify-center flex-wrap m-xl h-16\"\n  }, React.createElement(\"div\", {\n    className: \"bg-black text-white w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"Black\")), React.createElement(\"div\", {\n    className: \"bg-white text-black w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"White\")), React.createElement(\"div\", {\n    className: \"bg-red text-white w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"Red\")), React.createElement(\"div\", {\n    className: \"bg-green text-white w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"Green\")), React.createElement(\"div\", {\n    className: \"bg-blue text-white w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"Blue\")), React.createElement(\"div\", {\n    className: \"bg-default w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"text-background font-large\"\n  }, \"Default\")), React.createElement(\"div\", {\n    className: \"bg-background text-default w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"Background\")), React.createElement(\"div\", {\n    className: \"bg-magenta text-white w-6 h-6 center shadow-md m-sm\"\n  }, React.createElement(\"p\", {\n    className: \"font-large\"\n  }, \"Magenta\"))), \"\\n\", React.createElement(_components.p, null, \"The docs go mroe in-depth, but let's let's dive into some questions that one might reasonably have on the first encounter:\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"What if I want different colors?\\\"\"), \"\\n\", React.createElement(_components.p, null, \"Good Question! I (hopefully) made everything easy to customize so the classes can fit right into any design or theme you have in mind.\"), \"\\n\", React.createElement(_components.p, null, \"Probably one of the first things one would want to do if they had a design would be to set the colors and fonts for their project. Add/remove at will, make your own names, change values, go wild! Instructions are in the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/customize/\"\n  }, \"Customize\"), \" section. Line heights, letter spacing, margins, paddings, names of the generated classes, just about everything is in a variable.\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"What about different shades? Dark-mode? Psuedo classes? What about responsive classes?\"), \"\\n\", React.createElement(_components.p, null, \"For more in-depth coverage of this particular subject I'd glance at the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/docs/pseudo-classes/\"\n  }, \"Pseudo Classes\"), \" overview and move on to the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/docs/colors/\"\n  }, \"Colors\"), \" section for examples of shades, pseudo-class functionality, and stuff like that.\"), \"\\n\", React.createElement(_components.p, null, \"In terms of responsivity I tried to\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"So.. what do these classes look like?\\\"\"), \"\\n\", React.createElement(_components.p, null, \"Let's take a look at the HTML for those boxes above:\"), \"\\n\", React.createElement(CodeWrapper, {\n    title: \"Html\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<div\\r\\n  class=\\\"display-flex flex-col flex-wrap items-center justify-center m-xl h-16\\\"\\r\\n>\\r\\n  <div class=\\\"bg-black text-white w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">Black</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-white text-black w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">White</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-red text-white w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">Red</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-green text-white w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">Green</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-blue text-white w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">Blue</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-default w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"text-background font-large\\\">Default</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-background text-default w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">Background</p>\\r\\n  </div>\\r\\n  <div class=\\\"bg-magenta text-white w-6 h-6 center shadow-md m-sm\\\">\\r\\n    <p class=\\\"font-large\\\">Magenta</p>\\r\\n  </div>\\r\\n</div>\\n\"))), \"\\n\", React.createElement(_components.p, null, \"Each class name corresponds to a CSS property. Having utility classes like this, even if you don't wanna use 'em for everything, keeps your onw styleshetts nice and clean.\"), \"\\n\", React.createElement(_components.h3, null, \"Isn't that more typing than Normal CSS?\"), \"\\n\", React.createElement(_components.p, null, \"For sure, it's a matter of taste. Everything's a tradeoff. Less style clutter, possibly more typing.\"), \"\\n\", React.createElement(_components.p, null, \"But with the almighty ctrl-c, ctrl-v and editor shortcuts, it's not really much of an issue. Plus, depending on your frontend framework and practices, you might not be repeating yourself much anyway and it might not be much of an issue.\"), \"\\n\", React.createElement(_components.p, null, \"The advantages include incredibly slim stylesheets, seeing the styles right in the markup, everything is still easy to keep consistat, and it's just a satisfying and easy way to do styling!\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"Doesn't Tailwind already do this?\\\"\"), \"\\n\", React.createElement(_components.p, null, \"I'm a big admirer of Tailwind. But there's differences. It is kind of like a less exhaustive, personal-project level tailwind-clone in SCSS. But while Tailwind's PostCSS can do things that SCSS can't do, the same applies vice-versa. It all comes down to what suits your taste. See the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/motivation/\"\n  }, \"Motivation\"), \" page!\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"So what exactly do all these classes mean?\\\"\\\"\"), \"\\n\", React.createElement(_components.p, null, \"Here are the corresponding css values for all the classes used in the example above:\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, \"Class\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"CSS rule\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-black\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #000;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-white\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #fff;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-red\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #cb3810;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-green\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #589f50;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-blue\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #2978a0;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-default\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #252832;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-background\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #fdfcf9;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"bg-magenta\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"background-color: #bf4081;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"text-white\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"color: white;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"text-black\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"color: black;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"text-background\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"color: #fdfcf9\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"font-large\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"font-family: \\\"Francois One\\\", sans-serif\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"m-xl\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"margin: 1.5rem;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"m-sm\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"margin: 0.5rem;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"h-16\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"height: 16rem;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"w-6\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"width: 6rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"h-6\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"height: 6rem\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"display-flex\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"display: flex;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"flex-col\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"flex-direction: column;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"flex-wrap\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"flex-wrap: wrap;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"items-center\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"align-items: center;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"justify-center\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"justify-content: center;\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"center\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"display: flex; \", React.createElement(\"br\"), \" align-items: center; \", React.createElement(\"br\"), \" justify-content: center;\")))), \"\\n\", React.createElement(_components.p, null, \"Hopefully I will be able to document everything well and make it easy to find.\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"So, how hard is it to change the Colors (or anything)?\\\"\"), \"\\n\", React.createElement(_components.p, null, \"Not very hard. Again, see the (Customize)[/customize/] section for more examples, but for just a quick overview here's what the colors look like in the _variables.scss file.\"), \"\\n\", React.createElement(_components.p, null, \"If you want a classes for like \", React.createElement(_components.code, null, \"bg-purple\"), \", \", React.createElement(_components.code, null, \"text-purple\"), \", \", React.createElement(_components.code, null, \"border-purple\"), \", etc. for example, it's as simple as adding a key value like \", React.createElement(_components.code, null, \"\\\"purple\\\": #662d91\"), \" to this map. Here's what the color variables look like by default:\"), \"\\n\", React.createElement(CodeWrapper, {\n    title: \"_variables.scss\",\n    isFile: true\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-scss\"\n  }, \"$colors: (\\r\\n  \\\"default\\\": (\\r\\n    \\\"white\\\": #fff,\\r\\n    \\\"black\\\": #000,\\r\\n    \\\"red\\\": #cb3810,\\r\\n    \\\"green\\\": #589f50,\\r\\n    \\\"blue\\\": #2978a0,\\r\\n    \\\"default\\\": #252832,\\r\\n    \\\"background\\\": #fdfcf9,\\r\\n    \\\"magenta\\\": #bf4081\\r\\n  ),\\r\\n  \\\"dark-mode\\\": (\\r\\n    \\\"background\\\": #292d3a,\\r\\n    \\\"default\\\": #dcdbda,\\r\\n    \\\"blue\\\": #5798e1,\\r\\n    \\\"dark-mode-only\\\": #4d5359\\r\\n  )\\r\\n);\\n\"))), \"\\n\", React.createElement(_components.p, null, \"If you can code up a website, I figure changing some variables in a file is not a big deal! Everything is up to you, from the names, to the number of classes, to the values and again, hopefully I've done a good job of documenting and making it easy.\"), \"\\n\", React.createElement(_components.h3, null, \"\\\"Anything else I should know?\\\"\\\"\"), \"\\n\", React.createElement(_components.p, null, \"I hope you liked this quick example. Glance around the docs, see the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/motivation/\"\n  }, \"Motivation\"), \" page if you want more insight into my motivations for making this, see the \", React.createElement(_components.a, {\n    href: \"/simple-scss-utilities-docs/install/\"\n  }, \"Install\"), \" page if you want to use these yourself, and feel free to click the \", React.createElement(FontAwesomeIcon, {\n    icon: faGithub\n  }), \" icon in the top menu bar to go to the github repo!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/mnt/c/Users/bthve/Desktop/2025 job search and side projects/side-repos/simple-scss-utilities-docs/content/docs/index.mdx\";\nimport React from \"react\";\nimport {useStaticQuery, graphql} from \"gatsby\";\nimport Layout from \"../../components/Layout/Layout\";\nimport SidebarLayout from \"../../components/Layout/SidebarLayout\";\nconst DocumentPage = ({location, data: {mdx}, children}) => {\n  const {pathname} = location;\n  if (pathname.includes(\"/page/\")) {\n    return React.createElement(React.Fragment, null, children);\n  }\n  return React.createElement(Layout, {\n    onSideBarPage: true\n  }, React.createElement(SidebarLayout, {\n    pathname: pathname\n  }, React.createElement(\"main\", null, children)));\n};\nDocumentPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocumentPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        description\n        title\n        type\n        image\n      }\n    }\n  }\n`;\n","import React from \"react\"\r\n\r\n// I decided to keep this seperate from CodeBlock.js, which which taken from examples give by how to use prisimjs in MDX around the interent\r\n// This is just a wrapper for code blocks, displays the filename or language, plus whatever else might be necessary in the future\r\n\r\n// a results block might be good too\r\n\r\nconst CodeWrapper = ({ children, title, isFile, addExtraMarginUnderTitle }) => {\r\n  return (\r\n    <div className=\"mt-lg mb-2xl mr-2\">\r\n      <h6\r\n        className={`font-large text-lg position-relative left-1px ${\r\n          addExtraMarginUnderTitle ? \"mb-md\" : \"mb-xs\"\r\n        }`}\r\n      >\r\n        {isFile ? \"File: \" : \"\"}\r\n        {title}\r\n      </h6>\r\n      <div className=\"mr-md\">{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodeWrapper\r\n","import { createContext } from \"react\"\r\n\r\nconst SidebarContext = createContext({\r\n  hasScrolled: false,\r\n  setHasScrolled: () => {}, // keep track if the scrolling was done by the user\r\n\r\n  activeAnchor: \"\", // '${path} ${to} of active anchor link'\r\n  setActiveAnchor: () => {}\r\n})\r\n\r\nexport default SidebarContext\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport SidebarContext from \"./SidebarContext\"\r\nimport { useLocation } from \"@reach/router\"\r\nimport { navigate } from \"gatsby\"\r\n\r\n/*\r\n  Gatsby seemed to have a little trouble with anchor links \r\n  Not only did they not seem to quite work but.. I also wanted to implement smooth scrolling\r\n  if you jump from page to page so I made my own component. \r\n  It's possible to make the URLs just slightly awkared if you\r\n  click directly on the link .. but.. they still work\r\n*/\r\nconst CustomAnchor = ({ children, path, to }) => {\r\n  const location = useLocation()\r\n  const { activeAnchor, setActiveAnchor, hasScrolled, setHasScrolled } =\r\n    useContext(SidebarContext)\r\n  const [active, setActive] = useState(false)\r\n  const { pathname } = location\r\n\r\n  useEffect(() => {\r\n    if (activeAnchor == `${process.env.PATH_PREFIX}${path} ${to}`) {\r\n      setActive(true)\r\n    } else {\r\n      setActive(false)\r\n    }\r\n  }, [activeAnchor])\r\n\r\n  // console.log(\r\n  //   `path: ${path} to: ${to} pathname: ${pathname} prefix with path: ${process.env.PATH_PREFIX}${path}`\r\n  // )\r\n\r\n  return (\r\n    <p\r\n      className={`${active ? \"font-bold\" : \"\"} cursor-pointer`}\r\n      onClick={() => {\r\n        // the pathname from location usually has an added slash\r\n\r\n        if (`${process.env.PATH_PREFIX}${path}/` == pathname) {\r\n          const tag = document.getElementById(to)\r\n          tag.scrollIntoView({ behavior: \"smooth\" })\r\n          // set \"hasScrolled\" to false .. gets set true if the user scrolls the docs area\r\n          setHasScrolled(false)\r\n\r\n          // in the MDX anchor componnnt, the text generates the id \"to\"\r\n          // two anchor links on different documents might have the same text so\r\n          // I have the path be part of the identifying string\r\n          // as long as 2 anchors on the same MDX page don't have the same text we're good\r\n          setActiveAnchor(`${process.env.PATH_PREFIX}${path} ${to}`)\r\n        } else {\r\n          navigate(`${path}?anchor=${to}`)\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default CustomAnchor\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useLocation } from \"@reach/router\"\r\nimport CustomAnchor from \"./CustomAnchor\"\r\nimport SidebarContext from \"./SidebarContext\"\r\nimport LayoutContext from \"./LayoutContext\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faX, faBars } from \"@fortawesome/free-solid-svg-icons\"\r\nimport * as layoutStyles from \"./layout.module.scss\"\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\"\r\n// HEADER IS A ReserveD WORD\r\n\r\nconst SideBar = ({ sidebarData }) => {\r\n  const { setActiveAnchor, hasScrolled } = useContext(SidebarContext)\r\n  const { sidebarOpen, setSidebarOpen } = useContext(LayoutContext)\r\n\r\n  const [anchorsOnPage, setAnchorsOnPage] = useState([])\r\n  const [anchorsLoaded, setAnchorsLoaded] = useState(false)\r\n  const [anchorUpdate, setAnchorUpdate] = useState([])\r\n\r\n  const [intialAnchorLinkSet, setIntialAnchorLinkSet] = useState(false)\r\n\r\n  // const [sidebarOpen, setSidebarOpen] = useState(true)\r\n  const [wideScreen, setWideScreen] = useState(false)\r\n  const { width } = useWindowDimensions()\r\n\r\n  const location = useLocation()\r\n  const { pathname } = location\r\n\r\n  // ok every time something enteres or leaves, update\r\n  // the anchors in view\r\n  useEffect(() => {\r\n    const els = document.querySelectorAll(\".anchor-link\")\r\n\r\n    const observerCallback = (entries, observer, header) => {\r\n      const newAnchorInfo = []\r\n      entries.forEach((entry, i) => {\r\n        const to = entry.target.href.split(\"#\")[1]\r\n        const path = pathname.slice(0, -1)\r\n        const anchorString = `${path} ${to}`\r\n\r\n        if (entry.isIntersecting) {\r\n          newAnchorInfo.push({\r\n            anchorString,\r\n            inView: true,\r\n            offsetTop: entry.target.offsetTop\r\n          })\r\n        } else {\r\n          newAnchorInfo.push({\r\n            anchorString,\r\n            inView: false,\r\n            offsetTop: entry.target.offsetTop\r\n          })\r\n        }\r\n      })\r\n\r\n      setAnchorUpdate(newAnchorInfo)\r\n    }\r\n\r\n    const observer = new window.IntersectionObserver(observerCallback, {\r\n      root: null,\r\n      threshold: 0.5 // set offset 0.1 means trigger if atleast 10% of element in viewport\r\n    })\r\n\r\n    els.forEach((el) => {\r\n      observer.observe(el)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (anchorUpdate.length && !anchorsLoaded) {\r\n      setAnchorsOnPage(anchorUpdate)\r\n      setAnchorsLoaded(true)\r\n    }\r\n  }, [anchorUpdate, anchorsLoaded])\r\n\r\n  // eh, there might be a better way to do this but\r\n  // by the time I got here I was like \"It works, and it's good enough!\"\r\n  useEffect(() => {\r\n    // to prevent infinite reloading, only update if there is a non-empty update, and then set the update to empty if done\r\n    if (anchorsLoaded && anchorUpdate.length) {\r\n      let newAnchorsOnPage = [...anchorsOnPage]\r\n      anchorUpdate.forEach((anchorInfo) => {\r\n        const index = anchorsOnPage.findIndex((anchor) => {\r\n          return anchorInfo.anchorString == anchor.anchorString\r\n        })\r\n\r\n        if (index >= 0) {\r\n          newAnchorsOnPage.splice(index, 1, anchorInfo)\r\n        }\r\n      })\r\n\r\n      setAnchorsOnPage(newAnchorsOnPage)\r\n      setAnchorUpdate([])\r\n\r\n      if (hasScrolled) {\r\n        let smallestTopOffset = Number.POSITIVE_INFINITY\r\n        let indexOfSmallestOffset = -1\r\n        newAnchorsOnPage.forEach((anchor, i) => {\r\n          if (anchor.inView && anchor.offsetTop < smallestTopOffset) {\r\n            smallestTopOffset = anchor.offsetTop\r\n            indexOfSmallestOffset = i\r\n          }\r\n        })\r\n\r\n        if (indexOfSmallestOffset >= 0) {\r\n          const newActiveAnchorInfo = newAnchorsOnPage[indexOfSmallestOffset]\r\n          setActiveAnchor(newActiveAnchorInfo.anchorString)\r\n        } else {\r\n          // if we're here, there's no anchors vidible on screen\r\n          setActiveAnchor(\"\")\r\n        }\r\n      }\r\n    }\r\n  }, [anchorsOnPage, anchorUpdate, anchorsLoaded, hasScrolled])\r\n\r\n  useEffect(() => {\r\n    if (location.search && !intialAnchorLinkSet) {\r\n      const urlParams = new URLSearchParams(location.search)\r\n      const anchorLink = urlParams.get(\"anchor\")\r\n      if (anchorLink) {\r\n        const tag = document.getElementById(anchorLink)\r\n        if (tag) {\r\n          tag.scrollIntoView({ behavior: \"smooth\" })\r\n\r\n          const path = pathname.slice(0, -1)\r\n          setActiveAnchor(`${path} ${anchorLink}`)\r\n        }\r\n      }\r\n      setIntialAnchorLinkSet(true)\r\n    } else if (anchorsLoaded && !intialAnchorLinkSet) {\r\n      // just set the active anchor link to the highest link in view\r\n      // pretty sure it's just gonna be the firs one that's \"in view\"\r\n      // and if the first one is in view, it's gonna be that one so ..\r\n      let firstAnchor = anchorsOnPage[0]\r\n\r\n      if (firstAnchor.inView) {\r\n        setActiveAnchor(firstAnchor.anchorString)\r\n      }\r\n\r\n      setIntialAnchorLinkSet(true)\r\n    }\r\n  }, [anchorsLoaded, anchorsOnPage, intialAnchorLinkSet])\r\n\r\n  useEffect(() => {\r\n    if (width > 768) {\r\n      setWideScreen(true)\r\n    } else {\r\n      setWideScreen(false)\r\n    }\r\n  }, [width])\r\n\r\n  useEffect(() => {\r\n    setSidebarOpen(true)\r\n  }, [wideScreen])\r\n\r\n  // organize alphabetically\r\n  // then loop the map and fill in the links and sublinks\r\n  console.log(\"SIDEBAR DATA IS\")\r\n  console.log(sidebarData)\r\n\r\n  if (!sidebarData) {\r\n    return <>{`No sidebar data for path ${pathname}`}</>\r\n  }\r\n\r\n  const { path, nodes } = sidebarData\r\n  const rootDocArr = []\r\n  const categoryArr = []\r\n  const categoryMap = {}\r\n  nodes.forEach((node) => {\r\n    const {\r\n      frontmatter: { category, title, slug, order, isCategoryRoot, anchorLinks }\r\n    } = node\r\n    if (!category) {\r\n      // don't give a slug of \"index\" part of the path here ..\r\n      // the path will just be /docs/ or /customize/ etc\r\n      // this is different for the categories\r\n      const pathName = slug === \"index\" ? `/${path}` : `/${path}/${slug}`\r\n      rootDocArr.push({\r\n        title,\r\n        path: pathName,\r\n        sublinks: null,\r\n        order,\r\n        anchorLinks\r\n      })\r\n    } else {\r\n      if (!categoryMap[category]) {\r\n        categoryMap[category] = []\r\n      }\r\n\r\n      if (isCategoryRoot) {\r\n        categoryArr.push({\r\n          title, // uppercase the first letter later\r\n          categoryName: category, // in case I change it from the title\r\n          isCategoryRoot: true,\r\n          path: `/${path}/${slug}`,\r\n          sublinks: null, // get changed into an array later\r\n          order,\r\n          anchorLinks\r\n        })\r\n      } else {\r\n        categoryMap[category].push({\r\n          title,\r\n          path: `/${path}/${slug}`,\r\n          order,\r\n          anchorLinks\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  // ok now loop through the sidebarLinkArr. If there's sublinks, fil them in\r\n\r\n  categoryArr.forEach((entry) => {\r\n    const category = entry.categoryName\r\n    entry.sublinks = categoryMap[category]\r\n  })\r\n\r\n  // the root docs will go first, sorted by an order property,  and then the categories\r\n  // in alphabetical order, and then the sublinks (in a category) are sorted by a frontmatter \"order\" property\r\n  // the anchor links are already determined in the frontmatter defintion\r\n  rootDocArr.sort((a, b) => a.order - b.order)\r\n  categoryArr.sort((a, b) => {\r\n    return a.order - b.order\r\n  })\r\n\r\n  categoryArr.forEach((item) => {\r\n    const { sublinks } = item\r\n\r\n    if (sublinks) {\r\n      sublinks.sort((a, b) => {\r\n        return a.order - b.order\r\n      })\r\n    }\r\n  })\r\n\r\n  const sidebarLinkArr = [...rootDocArr, ...categoryArr]\r\n\r\n  // capitalize category name\r\n  // .. hm.. oh yeah. Fix anchor links\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-0\">\r\n        <div\r\n          onClick={() => setSidebarOpen(true)}\r\n          className={`${\r\n            sidebarOpen ? \"display-none\" : \"display-flex\"\r\n          } text-xl w-3 h-3 position-relative top-1 left-1 radius-full cursor-pointer shadow-magenta-lg hover:shadow-blue-lg bg-background-ltr items-center justify-center bg-background z-5 text-magenta hover:text-blue`}\r\n        >\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        id=\"sidebar\"\r\n        className={`${\r\n          layoutStyles.sidebar\r\n        }  max-tab:position-absolute max-tab:h-full min-w-1/4 max-tab:w-20 overflow-y-scroll bg-background z-4  ${\r\n          sidebarOpen ? \"\" : \"display-none\"\r\n        }`}\r\n      >\r\n        <nav className=\"p-md\">\r\n          <span className={`${wideScreen ? \"display-none\" : \"\"} `}>\r\n            <FontAwesomeIcon\r\n              className={`cursor-pointer hover:text-magenta text-magenta hover:text-blue text-lg py-sm`}\r\n              onClick={() => setSidebarOpen(false)}\r\n              icon={faX}\r\n            />\r\n          </span>\r\n          <ul className=\"display-flex flex-col line-height-lg\">\r\n            {sidebarLinkArr.map((entry) => {\r\n              const {\r\n                isCategoryRoot,\r\n                categoryName,\r\n                path,\r\n                title,\r\n                sublinks,\r\n                anchorLinks\r\n              } = entry\r\n\r\n              if (isCategoryRoot) {\r\n                const upperCaseTitle =\r\n                  title.charAt(0).toUpperCase() + title.slice(1)\r\n\r\n                const highlightLink =\r\n                  `${process.env.PATH_PREFIX}${path}/` === pathname\r\n\r\n                return (\r\n                  <li key={`${path} ${title}`}>\r\n                    <span\r\n                      className={`${\r\n                        highlightLink ? \"text-magenta\" : \"\"\r\n                      } font-large hover:text-magenta `}\r\n                    >\r\n                      <Link to={path}>{upperCaseTitle}</Link>\r\n                    </span>\r\n                    {anchorLinks && (\r\n                      <ul className=\"line-height-md \">\r\n                        {anchorLinks.map((anchorLink, i) => {\r\n                          // name of is a bit different, I don't think anchor links are a full \"path\" (might need to refacto later)\r\n                          const { title, link } = anchorLink\r\n\r\n                          return (\r\n                            <li\r\n                              key={`${title} ${link}`}\r\n                              className={`pl-md text-md ${\r\n                                i == anchorLinks.length - 1 ? \"mb-xs\" : \"\"\r\n                              } `}\r\n                            >\r\n                              <CustomAnchor path={path} to={link}>\r\n                                {title}\r\n                              </CustomAnchor>\r\n                            </li>\r\n                          )\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                    {sublinks && (\r\n                      <ul>\r\n                        {sublinks.map((link, i) => {\r\n                          const { title, path: subLinkPath, anchorLinks } = link\r\n\r\n                          const highlightLink =\r\n                            `${process.env.PATH_PREFIX}${subLinkPath}/` ===\r\n                            pathname\r\n\r\n                          return (\r\n                            <li\r\n                              key={`${title} ${subLinkPath}`}\r\n                              className={`pl-md font-normal   ${\r\n                                i == sublinks.length - 1 ? \"mb-xs\" : \"\"\r\n                              }`}\r\n                            >\r\n                              <span\r\n                                className={`${\r\n                                  highlightLink ? \"text-magenta\" : \"\"\r\n                                } font-bold hover:text-magenta`}\r\n                              >\r\n                                <Link to={subLinkPath}>{title}</Link>\r\n                              </span>\r\n\r\n                              {anchorLinks && (\r\n                                <ul className=\"line-height-md \">\r\n                                  {anchorLinks.map((anchorLink) => {\r\n                                    // name of is a bit different, I don't think anchor links are a full \"path\" (might need to refacto later)\r\n                                    const { title, link } = anchorLink\r\n\r\n                                    return (\r\n                                      <li\r\n                                        key={`${title} ${link}`}\r\n                                        className=\"pl-md text-md hover:text-magenta\"\r\n                                      >\r\n                                        <CustomAnchor\r\n                                          path={subLinkPath}\r\n                                          to={link}\r\n                                        >\r\n                                          {title}\r\n                                        </CustomAnchor>\r\n                                      </li>\r\n                                    )\r\n                                  })}\r\n                                </ul>\r\n                              )}\r\n                            </li>\r\n                          )\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                  </li>\r\n                )\r\n              }\r\n\r\n              const upperCaseTitle =\r\n                title.charAt(0).toUpperCase() + title.slice(1)\r\n\r\n              const highlightLink =\r\n                `${process.env.PATH_PREFIX}${path}/` === pathname\r\n\r\n              return (\r\n                <li key={`${path} ${title}`}>\r\n                  <span\r\n                    className={`${\r\n                      highlightLink ? \"text-magenta\" : \"\"\r\n                    } font-large hover:text-magenta`}\r\n                  >\r\n                    <Link to={path}>{title}</Link>\r\n                  </span>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React, { useState, useContext } from \"react\"\r\nimport Footer from \"./Footer\"\r\nimport SideBar from \"./Sidebar\"\r\nimport LayoutContext from \"./LayoutContext\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport * as layoutStyles from \"./layout.module.scss\"\r\nimport SidebarContext from \"./SidebarContext\"\r\n// not sure how best to pass the sidebar and the content\r\n\r\nconst SidebarLayout = ({ pathname, children }) => {\r\n  // context state\r\n  const { sidebarOpen, setSidebarOpen } = useContext(LayoutContext)\r\n\r\n  const [hasScrolled, setHasScrolled] = useState(false)\r\n  const [activeAnchor, setActiveAnchor] = useState(\"\")\r\n\r\n  const { docs, components, customize } = useStaticQuery(graphql`\r\n    query HeaderQuery {\r\n      docs: allMdx(filter: { frontmatter: { type: { eq: \"docs\" } } }) {\r\n        nodes {\r\n          id\r\n          frontmatter {\r\n            title\r\n            slug\r\n            category\r\n            order\r\n            isCategoryRoot\r\n            anchorLinks {\r\n              title\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n      # components: allMdx(\r\n      #   filter: { frontmatter: { type: { eq: \"components\" } } }\r\n      # ) {\r\n      #   nodes {\r\n      #     id\r\n      #     frontmatter {\r\n      #       title\r\n      #       slug\r\n      #       category\r\n      #       order\r\n      #       isCategoryRoot\r\n      #       anchorLinks {\r\n      #         title\r\n      #         link\r\n      #       }\r\n      #     }\r\n      #   }\r\n      # }\r\n      customize: allMdx(\r\n        filter: { frontmatter: { type: { eq: \"customize\" } } }\r\n      ) {\r\n        nodes {\r\n          id\r\n          frontmatter {\r\n            title\r\n            slug\r\n            category\r\n            order\r\n            isCategoryRoot\r\n            anchorLinks {\r\n              title\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // const pathParts = pathname.split(\"/\")\r\n  // const section = pathParts.length && pathname.split(\"/\")[1] // this should always be defined in this route but let;s be careful\r\n\r\n  let path_prefix = process.env.PATH_PREFIX\r\n    ? process.env.PATH_PREFIX\r\n    : process.env.GATSBY_PATH_PREFIX // make a .env.development file and put GAtSBY\r\n\r\n  let sidebarData\r\n\r\n  console.log(\"TIME TO DEBUG\")\r\n  console.log(sidebarData)\r\n  console.log(`${path_prefix}docs`)\r\n  console.log(process.env)\r\n  console.log(process.env.GATSBY_PATH_PREFIX)\r\n  console.log(process.env.PATH_PREFIX)\r\n\r\n  // this might be kinda janky code .. but I don't wanna spend forever trying to think about an alternative way\r\n  if (pathname.startsWith(`${path_prefix}docs`)) {\r\n    sidebarData = { path: \"docs\", ...docs }\r\n  } else if (pathname.startsWith(`${path_prefix}customize`)) {\r\n    sidebarData = { path: \"customize\", ...customize }\r\n  }\r\n\r\n  return (\r\n    <div id=\"sidebar-layout\" className=\"display-flex min-w-full grow-1\">\r\n      <SidebarContext.Provider\r\n        value={{\r\n          activeAnchor,\r\n          setActiveAnchor,\r\n          hasScrolled,\r\n          setHasScrolled\r\n        }}\r\n      >\r\n        <SideBar sidebarData={sidebarData} />\r\n        <div\r\n          id=\"docs-section\"\r\n          className={`display-flex flex-col grow-1 overflow-y-scroll position-relative ${layoutStyles.docsSection}`}\r\n          onWheel={() => {\r\n            setHasScrolled(true)\r\n          }}\r\n          // remember to test this on mobile\r\n          onTouchStart={() => {\r\n            setHasScrolled(true)\r\n          }}\r\n        >\r\n          <div\r\n            id=\"small-width-overlay\"\r\n            className={`display-none ${\r\n              sidebarOpen ? \"max-tab:display-block\" : \"\"\r\n            } position-fixed top-0 left-0 w-full h-full z-3 bg-black opacity-10`}\r\n          />\r\n          <div\r\n            id=\"the-document\"\r\n            className={`grow-1 pl-xl p-lg w-19/20 max-w-container lg:mx-auto   ${\r\n              sidebarOpen ? \"max-tab:filter-blur-md\" : \"\"\r\n            }`}\r\n          >\r\n            {children}\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </SidebarContext.Provider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarLayout\r\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h4","p","h3","a","pre","code","table","thead","tr","th","tbody","td","_provideComponents","components","React","className","href","CodeWrapper","title","align","isFile","FontAwesomeIcon","icon","faGithub","wrapper","MDXLayout","DocumentPage","_ref","location","data","mdx","children","pathname","includes","Layout","onSideBarPage","SidebarLayout","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","addExtraMarginUnderTitle","createContext","hasScrolled","setHasScrolled","activeAnchor","setActiveAnchor","path","to","useLocation","useContext","SidebarContext","active","setActive","useState","useEffect","process","PATH_PREFIX","onClick","document","getElementById","scrollIntoView","behavior","navigate","sidebarData","sidebarOpen","setSidebarOpen","LayoutContext","anchorsOnPage","setAnchorsOnPage","anchorsLoaded","setAnchorsLoaded","anchorUpdate","setAnchorUpdate","intialAnchorLinkSet","setIntialAnchorLinkSet","wideScreen","setWideScreen","width","useWindowDimensions","els","querySelectorAll","observer","window","IntersectionObserver","observerCallback","entries","header","newAnchorInfo","forEach","entry","i","target","split","anchorString","slice","isIntersecting","push","inView","offsetTop","root","threshold","el","observe","length","newAnchorsOnPage","_toConsumableArray","anchorInfo","index","findIndex","anchor","splice","smallestTopOffset","Number","POSITIVE_INFINITY","indexOfSmallestOffset","newActiveAnchorInfo","search","anchorLink","URLSearchParams","get","tag","firstAnchor","console","log","nodes","rootDocArr","categoryArr","categoryMap","node","frontmatter","category","slug","order","isCategoryRoot","anchorLinks","categoryName","sublinks","pathName","sort","b","item","sidebarLinkArr","concat","faBars","id","faX","map","upperCaseTitle","charAt","toUpperCase","highlightLink","key","Link","link","CustomAnchor","subLinkPath","docs","customize","useStaticQuery","path_prefix","startsWith","Provider","value","SideBar","onWheel","onTouchStart","Footer"],"sourceRoot":""}