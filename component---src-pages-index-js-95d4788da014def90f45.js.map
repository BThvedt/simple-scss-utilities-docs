{"version":3,"file":"component---src-pages-index-js-95d4788da014def90f45.js","mappings":"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","sources":["webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Types/RangeType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Canvas.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Particle.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Particles.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Retina.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Container.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Engine.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/engine/browser/init.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/move-base/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/move-base/browser/BaseMover.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-circle/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/basic/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-hex-color/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-hsl-color/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-rgb-color/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/move-base/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-circle/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-color/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-opacity/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-out-modes/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-size/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-emoji/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-image/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-life/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-line/browser/LineDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-line/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-polygon/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-polygon/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-square/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-star/browser/Utils.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-star/browser/StarDrawer.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/slim/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/move-parallax/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-attract/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bounce/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-bubble/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-connect/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-grab/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-pause/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-push/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-remove/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-repulse/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-external-slow/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-attract/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/plugin-easing-quad/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-emoji/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-line/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-square/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/shape-star/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-life/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-rotate/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/updater-stroke-color/browser/index.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/react/dist/Particles.js","webpack://simple-scss-utilities/./src/components/Banner/banner.module.scss","webpack://simple-scss-utilities/./src/components/Banner/Banner.js","webpack://simple-scss-utilities/./node_modules/@tsparticles/react/dist/index.js","webpack://simple-scss-utilities/./src/pages/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n","export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","// extracted by mini-css-extract-plugin\nexport var banner = \"banner-module--banner--9be5b\";\nexport var glow = \"banner-module--glow--8a2bf\";\nexport var gradient = \"banner-module--gradient--ddf9b\";\nexport var moveX = \"banner-module--moveX--4623c\";\nexport var moveY = \"banner-module--moveY--0cbcf\";\nexport var opacity = \"banner-module--opacity--b6b74\";\nexport var particlesJs = \"banner-module--particles-js--b9509\";\nexport var rotate3D = \"banner-module--rotate3D--a1e4e\";\nexport var textContainer = \"banner-module--text-container--36508\";\nexport var word = \"banner-module--word--f618b\";","import React, { useEffect, useMemo, useState } from \"react\"\r\nimport { loadSlim } from \"@tsparticles/slim\"\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\"\r\nimport * as BannerStyles from \"./banner.module.scss\"\r\n\r\nconst Banner = () => {\r\n  const [init, setInit] = useState(false)\r\n\r\n  useEffect(() => {\r\n    initParticlesEngine(async (engine) => {\r\n      await loadSlim(engine)\r\n    }).then(() => {\r\n      setInit(true)\r\n    })\r\n  }, [])\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(\"\")\r\n  }\r\n\r\n  const options = useMemo(\r\n    () => ({\r\n      // background: {\r\n      //   color: {\r\n      //     value: \"rgba(0,100,100,0.4)\"\r\n      //   }\r\n      // },\r\n      fpsLimit: 120,\r\n      interactivity: {\r\n        detect_on: \"canvas\",\r\n        events: {\r\n          onhover: { enable: false, mode: \"grab\" },\r\n          onclick: { enable: false, mode: \"push\" },\r\n          resize: true\r\n        },\r\n        modes: {\r\n          grab: { distance: 400, line_linked: { opacity: 1 } },\r\n          bubble: {\r\n            distance: 400,\r\n            size: 40,\r\n            duration: 2,\r\n            opacity: 8,\r\n            speed: 3\r\n          },\r\n          repulse: { distance: 200, duration: 0.4 },\r\n          push: { particles_nb: 4 },\r\n          remove: { particles_nb: 2 }\r\n        }\r\n      },\r\n      particles: {\r\n        number: {\r\n          value: 17,\r\n          density: { enable: false, value_area: 1443 }\r\n        },\r\n        color: { value: \"#6216cf\" },\r\n        shape: {\r\n          type: \"edge\",\r\n          stroke: { width: 0, color: \"#5a00ff\" },\r\n          polygon: { nb_sides: 11 },\r\n          image: { src: \"img/github.svg\", width: 100, height: 100 }\r\n        },\r\n        opacity: {\r\n          value: 0.25,\r\n          random: true,\r\n          anim: { enable: false, speed: 1, opacity_min: 0.1, sync: false }\r\n        },\r\n        size: {\r\n          value: 130,\r\n          random: true,\r\n          anim: { enable: true, speed: 10, size_min: 40, sync: false }\r\n        },\r\n        line_linked: {\r\n          enable: false,\r\n          distance: 200,\r\n          color: \"#ffffff\",\r\n          opacity: 1,\r\n          width: 2\r\n        },\r\n        move: {\r\n          enable: true,\r\n          speed: 0.5,\r\n          direction: \"top\",\r\n          random: true,\r\n          straight: false,\r\n          out_mode: \"out\",\r\n          bounce: false,\r\n          attract: { enable: false, rotateX: 600, rotateY: 1200 }\r\n        }\r\n      },\r\n      detectRetina: true,\r\n      style: {\r\n        position: \"absolute\"\r\n      },\r\n      autoPlay: true\r\n    }),\r\n    []\r\n  )\r\n\r\n  return (\r\n    // <section id=\"banner\">\r\n    <section id={BannerStyles.banner}>\r\n      {/* <div id=\"particles-js\" className={BannerStyles.particlesJs}></div> */}\r\n      {init && (\r\n        <Particles\r\n          id=\"tsparticles\"\r\n          className={BannerStyles.particlesJs}\r\n          particlesLoaded={particlesLoaded}\r\n          options={options}\r\n        />\r\n      )}\r\n      <div id={BannerStyles.textContainer}>\r\n        <div id={BannerStyles.moveX}>\r\n          <div id={BannerStyles.moveY}>\r\n            <h1 id=\"banner-text\">\r\n              <span className={BannerStyles.word}>\r\n                <span>S</span> <span>i</span> <span>m</span> <span>p</span>\r\n                <span>l</span> <span>e</span>\r\n              </span>\r\n              <span>\r\n                <span className={BannerStyles.word}>\r\n                  <span>S</span> <span>c</span> <span>s</span> <span>s</span>\r\n                </span>\r\n                <span className={BannerStyles.word}>\r\n                  <span>U</span> <span>t</span> <span>i</span> <span>l</span>\r\n                  <span>i</span> <span>t</span> <span>e</span> <span>s</span>\r\n                </span>\r\n              </span>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Script type=\"text/javascript\" src={\"../../../particles.min.js\"} />\r\n      <Script type=\"text/javascript\" src={\"../../../stats.min.js\"} />\r\n      <Script type=\"text/javascript\" src={\"../../../bubbles.js\"} /> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","import React, { useEffect } from \"react\"\nimport Layout from \"../components/Layout/Layout\"\nimport Banner from \"../components/Banner/Banner\"\nimport \"../../simple-scss-utilities/ssu.scss\"\nimport \"../scss/custom.scss\"\nimport { Link } from \"gatsby\"\n// import \"../css/ssu.css\"\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Banner />\n      <main className=\"max-w-container mx-auto p-lg letter-spacing-md text-lg\">\n        <div>\n          <p className=\"line-height-lg letter-spacing-md line-height-lg mt-md\">\n            <span className=\"font-bold\">Wow what a great banner!</span> No\n            wonder you're interested in my framework. Ok, the banner wasn't made\n            with it. But everything else was! Aside from the banner, I use\n            utility classes and 4 lines of Scss. Now that's a lean stylesheet!\n          </p>\n\n          <h1 className=\"font-header align-center mt-xl mb-md text-5xl\">\n            <span className=\"max-mob:display-none\">-</span> Simple Scss Utilites\n            <span className=\"max-mob:display-none\">-</span>\n          </h1>\n\n          <div className=\"row gap-lg\">\n            <div className=\"col-12 scr:col-4\">\n              <h3 className=\"font-large text-2xl mb-lg\">For Simplicity</h3>\n              <p className=\"line-height-lg mb-xl\">\n                There's no \"rules\" about how to use this framework. Don't worry\n                if you're doing it \"right\" or not. The concept couldn't be\n                simpler. Change the variables to match your theme. Use utility\n                classes to cut down on the SCSS bloat. Write the rest how you\n                want!\n              </p>\n              <p className=\"font-large text-xl  font-bold text-blue hover:text-magenta cursor-pointer\">\n                <Link to=\"/install\">Install</Link>\n              </p>\n            </div>\n            <div className=\"col-12 scr:col-4\">\n              <h3 className=\"font-large text-2xl mb-lg\">For Creativitiy</h3>\n              <p className=\"line-height-lg mb-xl\">\n                I don't try to do everything for you, or make decisions for you.\n                I encourage you to write your own SCSS. Put your own stamp and\n                style on projects! The utility classes are there to be useful,\n                then get out of your way.\n              </p>\n\n              <p className=\"font-large text-xl font-bold text-blue hover:text-magenta cursor-pointer\">\n                <Link to=\"/docs\">Docs</Link>\n              </p>\n            </div>\n            <div className=\"col-12 scr:col-4 p-xs\">\n              <h3 className=\"font-large text-2xl mb-lg\">For Customization</h3>\n              <p className=\"line-height-lg mb-xl\">\n                All the variables are in one file. Call me crazy but I think if\n                you can develop a website, you can certinaly change a variable's\n                value. I (hope I) made everything super easy. Change anything\n                you want! Go wild!\n              </p>\n              <p className=\"font-large text-xl  font-bold text-blue hover:text-magenta cursor-pointer\">\n                <Link to=\"/customize\">Customize</Link>\n              </p>\n            </div>\n          </div>\n          <p className=\"line-height-lg letter-spacing-md mt-2xl mb-3xl\">\n            In short, when I'm goofing off on my own, I like writing my own\n            SCSS. I also like utility classes. My ideal framework is where the\n            utility can do most of the standard stuff, the boring stuff. That's\n            where they stop. The rest is up to me! For me, it's the sweet spot.\n          </p>\n        </div>\n      </main>\n    </Layout>\n  )\n}\n\n// You'll learn about this in the next task, just copy it for now\nexport const Head = () => (\n  <>\n    <title>Simple Scss Utilities</title>\n    <meta name=\"description\" content=\"The docs for Simple Scss Utilities\" />\n  </>\n)\n\n// Step 3: Export your component\nexport default IndexPage\n"],"names":["generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","half","millisecondsToSeconds","originPoint","defaultTransform","randomColorValue","midColorValue","doublePI","Math","PI","generatedTrue","generatedFalse","canvasTag","rgbMax","hMax","quarter","rgbFactor","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","Array","isNull","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","cos","sin","coords3d","undefined","Error","origin","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","idx","cancelAnimationFrame","getRandom","clamp","Number","EPSILON","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","degToRad","degrees","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","data","position","size","width","height","parseAlpha","input","endsWith","parseFloat","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","indexOf","async","loadFont","font","weight","fonts","load","itemFromArray","index","useIndex","arrayRandomIndex","isPointInside","point","offset","radius","direction","bounds","inside","bottom","top","left","right","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","key","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","enable","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","options","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","bounceOptions","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","increase","status","increasing","decrease","decreasing","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","percent","_","rest","updateAnimation","changeDirection","destroyType","delta","destroyed","minValue","maxValue","destroy","checkDestroy","getFullScreenStyle","fn","cache","Map","args","JSON","stringify","has","get","result","set","memoize","zIndex","fullScreenStyle","createElement","style","margin","padding","borderWidth","toString","setProperty","AlterType","InteractivityDetect","EventType","DivType","ResponsiveMode","ThemeMode","CollisionMode","OutMode","LimitMode","InteractorType","ParticleOutType","RangeType","stringToRgba","engine","manager","colorManagers","values","startsWith","stringPrefix","parseString","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","g","b1","b","h","l","s","hslToRgb","hsl","hNormalized","sNormalized","lNormalized","grayscaleValue","round","channel","temp1","temp2","temp3","temp3Max","phaseThird","red","green","blue","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","updateColorValue","range","updateColor","ranges","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","drawParticle","container","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","rotating","transformData","a","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","fillStyle","strokeWidth","lineWidth","stroke","strokeStyle","drawData","shape","drawer","shapeDrawers","draw","pixelRatio","retina","shapeClose","shapeFill","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","newValue","setStyle","canvas","important","elementStyle","keys","Set","Object","prototype","hasOwnProperty","call","getPropertyValue","removeProperty","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","_engine","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","Promise","resolve","reject","image","img","addEventListener","_coverImage","evt","src","_initStyle","_fullScreen","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_originalStyle","_mutationObserver","fullScreen","_standardSize","stdSize","_context","_generated","paint","stop","remove","drawAsync","spawning","pfColor","psColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","dataset","ariaHidden","clonedStyle","styleKey","styleValue","stylePriority","getPropertyPriority","cloneStyle","standardSize","offsetHeight","offsetWidth","retinaSize","getContext","currentSize","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","name","default","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","circle","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","tmp","Modes","_container","interactors","interactor","loadModeOptions","Interactivity","modes","ManualParticle","Responsive","maxWidth","Infinity","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","Effect","close","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","out","Spin","Move","attract","center","none","drift","gravity","path","outModes","spin","straight","vibrate","warp","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","SizeAnimation","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","collisions","groups","number","reduceDuplicates","group","hasOwn","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","getInteractors","external","particlesInteract","reset","fixOutMode","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","outside","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","outType","override","unbreakable","inRange","slow","pathGenerator","shapeDrawer","particleDestroy","particleDestroyed","dispatchEvent","strokeColor","id","overrideOptions","effectClose","effectFill","lastPathTime","isRotating","misplaced","maxDistance","normal","ignoresResizeRatio","mainOptions","particlesOptions","effectType","shapeType","effectOptions","shapeOptions","availableEffects","availableShapes","effectData","loadEffectData","shapeData","loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","setLastZIndex","sides","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","BaseRange","Circle","contains","intersects","distPos","abs","Rectangle","rectangle","rectRange","pow","w","w2","h2","QuadTree","capacity","_subdivide","i","fixedIndex","_subs","_divided","_points","insert","check","queryCircle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","forEach","addParticle","limitMode","currentCount","countToRemove","wait","update","condition","particlesInitialization","groupOptions","j","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","resizeFactor","particleUpdate","checkDelete","zArray","Retina","devicePixelRatio","ratio","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","radiusX","radiusY","clearClickHandlers","clearPlugins","mainArr","items","findIndex","containerDestroyed","refreshTime","frame","_drawAnimationFrame","export","supported","blob","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","containerInit","particlesSetup","_currentTheme","handle","containerPaused","needsUpdate","containerPlay","start","HTMLElement","containerStarted","_delayTimeout","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","all","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","version","addColorManager","addConfig","configAdded","addEasing","easing","getEasing","addEffect","addInteractor","interactorInitializer","addMover","moverInitializer","addParticleUpdater","updaterInitializer","addPathGenerator","addPlugin","getPlugin","addPreset","addShape","validType","validTypes","checkVersion","pluginVersion","dom","domItem","needsPlugin","params","url","fallback","response","fetch","ok","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","deleteCount","domContainer","getElementById","body","append","getDomContainer","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","setOnClickHandler","ExternalInteractorBase","ParticlesInteractorBase","RotateDirection","GradientType","EasingType","tsParticles","generate","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","spinOptions","spinPos","spinCenter","spinAcceleration","clockwise","counterClockwise","initSpin","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","spinClockwise","updateFunc","maxCanvasSize","halfMaxSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","drawCircle","ColorUpdater","hAnimation","sAnimation","lAnimation","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","_parseString","hexColor","hexFixed","replace","exec","parseInt","HslIndexes","HslColorManager","hsla","rgbResult","hslaToRgba","OpacityUpdater","opacityOptions","opacityAnimation","BounceOutMode","split","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","checkOutMode","_updateOutMode","RgbColorManager","rgbColor","SizeUpdater","sizeAnimation","loadBasic","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","ImageBitmap","emojiDataKey","previousAlpha","drawEmoji","promises","emoji","randomIndexData","emojiOptions","fullSize","OffscreenCanvas","textBaseline","textAlign","fillText","transferToImageBitmap","processAttract","attractRadius","area","queryCb","attractOptions","attractFactor","normVec","Attract","easeOutQuad","attractMode","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","enabledCb","hoverAttract","clickAttract","halfPI","processBounce","divBounce","bounceMode","bounceCb","querySelectorAll","elem","offsetLeft","offsetTop","tolerance","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","mouseBounce","BubbleBase","BubbleDiv","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","dist","proximityFactor","currentColorRegex","loadImage","loading","Image","downloadSvgImage","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","increment","noData","DisposalMethod","GIFDataHeaders","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","concat","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","ApplicationExtension","applicationExtension","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","parseExtensionBlock","loadGifImage","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","Replace","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","ImageDrawer","loadImageShape","addImage","images","offscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","then","Preload","ImagePreloaderPlugin","preloadOptions","existing","imageFunc","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","updateLife","LineDrawer","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","attractDistance","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","_linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","ids","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","d1","yi","d2","xi","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","p3","opacityTriangle","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","side","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","drawPolygon","getCenter","getSidesData","polygon","PolygonDrawer","arguments","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","inset","starInset","drawStar","star","StrokeColorUpdater","strokeAnimation","strokeHslColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","f","particlesLoaded","className","word","Banner","setInit","useState","useEffect","initParticlesEngine","useMemo","detect_on","onhover","onclick","line_linked","particles_nb","value_area","nb_sides","anim","opacity_min","size_min","out_mode","React","BannerStyles","Head","content","IndexPage","Layout","Link","to"],"sourceRoot":""}